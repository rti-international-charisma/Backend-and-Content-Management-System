(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0ba2fb"],{"35ad":function(e,n,t){"use strict";t.r(n),n["default"]='# Environment Variables\n\n> Environment Variables are used for all configuration within Directus projects. They are managed in the root `.env`\n> file, which is created during the installation process.\n\n[[toc]]\n\n## General\n\n| Variable           | Description                                                                                         | Default Value |\n| ------------------ | --------------------------------------------------------------------------------------------------- | ------------- |\n| `CONFIG_PATH`      | Where your config file is located. See [Config Files](/reference/config-files/)                     | `.env`        |\n| `PORT`             | What port to run the API under.                                                                     | `8055`        |\n| `PUBLIC_URL`       | URL where your API can be reached on the web.                                                       | `/`           |\n| `LOG_LEVEL`        | What level of detail to log. One of `fatal`, `error`, `warn`, `info`, `debug`, `trace` or `silent`. | `info`        |\n| `LOG_STYLE`        | Render the logs human readable (pretty) or as JSON. One of `pretty`, `raw`.                         | `pretty`      |\n| `MAX_PAYLOAD_SIZE` | Controls the maximum request body size. Accepts number of bytes, or human readable string.          | `100kb`       |\n\n## Database\n\n| Variable               | Description                                                                                                                                        | Default Value |\n| ---------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------- | ------------- |\n| `DB_CLIENT`            | **Required**. What database client to use. One of `pg` or `postgres`, `mysql`, `oracledb`, `mssql`, or `sqlite3`.                                  | --            |\n| `DB_HOST`              | Database host. **Required** when using `pg`, `mysql`, `oracledb`, or `mssql`.                                                                      | --            |\n| `DB_PORT`              | Database port. **Required** when using `pg`, `mysql`, `oracledb`, or `mssql`.                                                                      | --            |\n| `DB_DATABASE`          | Database name. **Required** when using `pg`, `mysql`, `oracledb`, or `mssql`.                                                                      | --            |\n| `DB_USER`              | Database user. **Required** when using `pg`, `mysql`, `oracledb`, or `mssql`.                                                                      | --            |\n| `DB_PASSWORD`          | Database user\'s password. **Required** when using `pg`, `mysql`, `oracledb`, or `mssql`.                                                           | --            |\n| `DB_FILENAME`          | Where to read/write the SQLite database. **Required** when using `sqlite3`.                                                                        | --            |\n| `DB_CONNECTION_STRING` | When using `pg`, you can submit a connection string instead of individual properties. Using this will ignore any of the other connection settings. | --            |\n| `DB_POOL_*`            | Pooling settings. Passed on to [the `tarn.js`](https://github.com/vincit/tarn.js#usage) library.                                                   | --            |\n\n::: tip Additional Database Variables\n\nAll `DB_*` environment variables are passed to the `connection` configuration of a [`Knex` instance](http://knexjs.org).\nBased on your project\'s needs, you can extend the `DB_*` environment variables with any config you need to pass to the\ndatabase instance.\n\n:::\n\n::: tip Pooling\n\nAll the `DB_POOL_` prefixed options are passed [to `tarn.js`](https://github.com/vincit/tarn.js#usage) through\n[Knex](http://knexjs.org/#Installation-pooling)\n\n:::\n\n## Security\n\n| Variable                         | Description                                                                                                                     | Default Value |\n| -------------------------------- | ------------------------------------------------------------------------------------------------------------------------------- | ------------- |\n| `KEY`                            | Unique identifier for the project.                                                                                              | --            |\n| `SECRET`                         | Secret string for the project.                                                                                                  | --            |\n| `ACCESS_TOKEN_TTL`               | The duration that the access token is valid.                                                                                    | 15m           |\n| `REFRESH_TOKEN_TTL`              | The duration that the refresh token is valid, and also how long users stay logged-in to the App.                                | 7d            |\n| `REFRESH_TOKEN_COOKIE_DOMAIN`    | Which domain to use for the refresh cookie. Useful for development mode.                                                        | --            |\n| `REFRESH_TOKEN_COOKIE_SECURE`    | Whether or not to use a secure cookie for the refresh token in cookie mode.                                                     | `false`       |\n| `REFRESH_TOKEN_COOKIE_SAME_SITE` | Value for `sameSite` in the refresh token cookie when in cookie mode.                                                           | `lax`         |\n| `PASSWORD_RESET_URL_ALLOW_LIST`  | List of URLs that can be used [as `reset_url` in /password/request](/reference/api/rest/authentication/#request-password-reset) | --            |\n| `USER_INVITE_URL_ALLOW_LIST`     | List of URLs that can be used [as `invite_url` in /users/invite](/reference/api/rest/users/#invite-a-new-user)                  | --            |\n\n::: tip Cookie Strictness\n\nBrowser are pretty strict when it comes to third-party cookies. If you\'re running into unexpected problems when running\nyour project and API on different domains, make sure to verify your configuration for `REFRESH_TOKEN_COOKIE_SECURE` and\n`REFRESH_TOKEN_COOKIE_SAME_SITE`.\n\n:::\n\n## CORS\n\n| Variable               | Description                                                                                                                                            | Default Value                |\n| ---------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------ | ---------------------------- |\n| `CORS_ENABLED`         | Whether or not to enable the CORS headers.                                                                                                             | `true`                       |\n| `CORS_ORIGIN`          | Value for the `Access-Control-Allow-Origin` header. Use `true` to match the Origin header, or provide a domain or a CSV of domains for specific access | `true`                       |\n| `CORS_METHODS`         | Value for the `Access-Control-Allow-Methods` header.                                                                                                   | `GET,POST,PATCH,DELETE`      |\n| `CORS_ALLOWED_HEADERS` | Value for the `Access-Control-Allow-Headers` header.                                                                                                   | `Content-Type,Authorization` |\n| `CORS_EXPOSED_HEADERS` | Value for the `Access-Control-Expose-Headers` header.                                                                                                  | `Content-Range`              |\n| `CORS_CREDENTIALS`     | Whether or not to send the `Access-Control-Allow-Credentials` header.                                                                                  | `true`                       |\n| `CORS_MAX_AGE`         | Value for the `Access-Control-Max-Age` header.                                                                                                         | `18000`                      |\n\n## Rate Limiting\n\n| Variable                | Description                                                                      | Default Value |\n| ----------------------- | -------------------------------------------------------------------------------- | ------------- |\n| `RATE_LIMITER_ENABLED`  | Whether or not to enable rate limiting on the API.                               | `false`       |\n| `RATE_LIMITER_POINTS`   | The amount of allowed hits per duration.                                         | `50`          |\n| `RATE_LIMITER_DURATION` | The time window in seconds in which the points are counted.                      | `1`           |\n| `RATE_LIMITER_STORE`    | Where to store the rate limiter counts. One of `memory`, `redis`, or `memcache`. | `memory`      |\n\nBased on the `RATE_LIMITER_STORE` used, you must also provide the following configurations:\n\n### Memory\n\nNo additional configuration required.\n\n### Redis\n\n| Variable             | Description                                                           | Default Value |\n| -------------------- | --------------------------------------------------------------------- | ------------- |\n| `RATE_LIMITER_REDIS` | Redis connection string, eg: `redis://:authpassword@127.0.0.1:6380/4` | ---           |\n\nAlternatively, you can provide the individual connection parameters:\n\n| Variable                      | Description                      | Default Value |\n| ----------------------------- | -------------------------------- | ------------- |\n| `RATE_LIMITER_REDIS_HOST`     | Hostname of the Redis instance   | --            |\n| `RATE_LIMITER_REDIS_PORT`     | Port of the Redis instance       | --            |\n| `RATE_LIMITER_REDIS_PASSWORD` | Password for your Redis instance | --            |\n\n### Memcache\n\n| Variable                | Description                        | Default Value |\n| ----------------------- | ---------------------------------- | ------------- |\n| `RATE_LIMITER_MEMCACHE` | Location of your memcache instance | ---           |\n\n::: tip Additional Rate Limiter Variables\n\nAll `RATE_LIMITER_*` variables are passed directly to a `rate-limiter-flexible` instance. Depending on your project\'s\nneeds, you can extend the above environment variables to configure any of\n[the `rate-limiter-flexible` options](https://github.com/animir/node-rate-limiter-flexible/wiki/Options).\n\n:::\n\n## Cache\n\n| Variable           | Description                                                                                                | Default Value    |\n| ------------------ | ---------------------------------------------------------------------------------------------------------- | ---------------- |\n| `ASSETS_CACHE_TTL` | How long assets will be cached for in the browser. Sets the `max-age` value of the `Cache-Control` header. | `30m`            |\n| `CACHE_ENABLED`    | Whether or not caching is enabled.                                                                         | `false`          |\n| `CACHE_TTL`        | How long the cache is persisted.                                                                           | `30m`            |\n| `CACHE_AUTO_PURGE` | Automatically purge the cache on `create`/`update`/`delete` actions.                                       | `false`          |\n| `CACHE_NAMESPACE`  | How to scope the cache data.                                                                               | `directus-cache` |\n| `CACHE_STORE`      | Where to store the cache data. Either `memory`, `redis`, or `memcache`.                                    | `memory`         |\n\nBased on the `CACHE_STORE` used, you must also provide the following configurations:\n\n### Memory\n\nNo additional configuration required.\n\n### Redis\n\n| Variable      | Description                                                           | Default Value |\n| ------------- | --------------------------------------------------------------------- | ------------- |\n| `CACHE_REDIS` | Redis connection string, eg: `redis://:authpassword@127.0.0.1:6380/4` | ---           |\n\nAlternatively, you can provide the individual connection parameters:\n\n| Variable               | Description                      | Default Value |\n| ---------------------- | -------------------------------- | ------------- |\n| `CACHE_REDIS_HOST`     | Hostname of the Redis instance   | --            |\n| `CACHE_REDIS_PORT`     | Port of the Redis instance       | --            |\n| `CACHE_REDIS_PASSWORD` | Password for your Redis instance | --            |\n\n### Memcache\n\n| Variable         | Description                        | Default Value |\n| ---------------- | ---------------------------------- | ------------- |\n| `CACHE_MEMCACHE` | Location of your memcache instance | ---           |\n\n## File Storage\n\n| Variable            | Description                                                                                                           | Default Value |\n| ------------------- | --------------------------------------------------------------------------------------------------------------------- | ------------- |\n| `STORAGE_LOCATIONS` | A CSV of storage locations (eg: `local,digitalocean,amazon`) to use. You can use any names you\'d like for these keys. | `local`       |\n\nFor each of the storage locations listed, you must provide the following configuration:\n\n| Variable                    | Description                                               | Default Value |\n| --------------------------- | --------------------------------------------------------- | ------------- |\n| `STORAGE_<LOCATION>_DRIVER` | Which driver to use, either `local`, `s3`, `gcs`, `azure` |               |\n| `STORAGE_<LOCATION>_ROOT`   | Where to store the files on disk                          | `\'\'`          |\n\nBased on your configured driver, you must also provide the following configurations:\n\n### Local (`local`)\n\n| Variable                  | Description                      | Default Value |\n| ------------------------- | -------------------------------- | ------------- |\n| `STORAGE_<LOCATION>_ROOT` | Where to store the files on disk | --            |\n\n### S3 (`s3`)\n\n| Variable                      | Description | Default Value      |\n| ----------------------------- | ----------- | ------------------ |\n| `STORAGE_<LOCATION>_KEY`      | User key    | --                 |\n| `STORAGE_<LOCATION>_SECRET`   | User secret | --                 |\n| `STORAGE_<LOCATION>_BUCKET`   | S3 Bucket   | --                 |\n| `STORAGE_<LOCATION>_REGION`   | S3 Region   | --                 |\n| `STORAGE_<LOCATION>_ENDPOINT` | S3 Endpoint | "s3.amazonaws.com" |\n\n### Azure (`azure`)\n\n| Variable                            | Description                | Default Value                         |\n| ----------------------------------- | -------------------------- | ------------------------------------- |\n| `STORAGE_<LOCATION>_CONTAINER_NAME` | Azure Storage container    | --                                    |\n| `STORAGE_<LOCATION>_ACCOUNT_NAME`   | Azure Storage account name | --                                    |\n| `STORAGE_<LOCATION>_ACCOUNT_KEY`    | Azure Storage key          | --                                    |\n| `STORAGE_<LOCATION>_ENDPOINT`       | Azure URL                  | "{ACCOUNT_KEY}.blob.core.windows.net" |\n\n### Google Cloud Storage (`gcs`)\n\n| Variable                          | Description                 | Default Value |\n| --------------------------------- | --------------------------- | ------------- |\n| `STORAGE_<LOCATION>_KEY_FILENAME` | Path to key file on disk    | --            |\n| `STORAGE_<LOCATION>_BUCKET`       | Google Cloud Storage bucket | --            |\n\nIf you don\'t provide any configuration for storage adapters, Directus will default to the following:\n\n```\nSTORAGE_LOCATIONS="local"\nSTORAGE_LOCAL_ROOT="./uploads"\n```\n\n## OAuth\n\n| Variable          | Description                             | Default Value |\n| ----------------- | --------------------------------------- | ------------- |\n| `OAUTH_PROVIDERS` | CSV of oAuth providers you want to use. | --            |\n\nFor each of the OAuth providers you list, you must also provide a number of extra variables. These differ per external\nservice. The following is a list of common required configuration options:\n\n| Variable                         | Description                                                                                            | Default Value |\n| -------------------------------- | ------------------------------------------------------------------------------------------------------ | ------------- |\n| `OAUTH_<PROVIDER>_KEY`           | oAuth key (a.k.a. application id) for the external service.                                            | --            |\n| `OAUTH_<PROVIDER>_SECRET`        | oAuth secret for the external service.                                                                 | --            |\n| `OAUTH_<PROVIDER>_SCOPE`         | A white-space separated list of privileges directus should ask for. A common value is: `openid email`. | --            |\n| `OAUTH_<PROVIDER>_AUTHORIZE_URL` | The authorize page URL of the external service                                                         | --            |\n| `OAUTH_<PROVIDER>_ACCESS_URL`    | The access URL of the external service                                                                 | --            |\n| `OAUTH_<PROVIDER>_PROFILE_URL`   | Where Directus can fetch the profile information of the authenticated user.                            | --            |\n\nDirectus relies on [`grant`](https://www.npmjs.com/package/grant) for the handling of the oAuth flow. Grant includes\n[a lot of default values](https://github.com/simov/grant/blob/master/config/oauth.json) for popular services. For\nexample, if you use `apple` as one of your providers, you only have to specify the key and secret, as Grant has the rest\ncovered. Checkout [the grant repo](https://github.com/simov/grant) for more information.\n\n## Extensions\n\n| Variable          | Description                           | Default Value  |\n| ----------------- | ------------------------------------- | -------------- |\n| `EXTENSIONS_PATH` | Path to your local extensions folder. | `./extensions` |\n\n## Email\n\n| Variable          | Description                                            | Default Value          |\n| ----------------- | ------------------------------------------------------ | ---------------------- |\n| `EMAIL_FROM`      | Email address from which emails are sent.              | `no-reply@directus.io` |\n| `EMAIL_TRANSPORT` | What to use to send emails. One of `sendmail`, `smtp`. | `sendmail`             |\n\nBased on the `EMAIL_TRANSPORT` used, you must also provide the following configurations:\n\n### Sendmail (`sendmail`)\n\n| Variable                  | Description                             | Default Value        |\n| ------------------------- | --------------------------------------- | -------------------- |\n| `EMAIL_SENDMAIL_NEW_LINE` | What new line style to use in sendmail. | `unix`               |\n| `EMAIL_SENDMAIL_PATH`     | Path to your sendmail executable.       | `/usr/sbin/sendmail` |\n\n### SMTP (`smtp`)\n\n| Variable              | Description      | Default Value |\n| --------------------- | ---------------- | ------------- |\n| `EMAIL_SMTP_HOST`     | SMTP Host        | --            |\n| `EMAIL_SMTP_PORT`     | SMTP Port        | --            |\n| `EMAIL_SMTP_USER`     | SMTP User        | --            |\n| `EMAIL_SMTP_PASSWORD` | SMTP Password    | --            |\n| `EMAIL_SMTP_POOL`     | Use SMTP pooling | --            |\n| `EMAIL_SMTP_SECURE`   | Enable TLS       | --            |\n\n## Misc.\n\nIf you\'re relying on Docker and/or the `directus bootstrap` CLI command, you can pass the following two environment\nvariables to automatically configure the first user:\n\n| Variable         | Description                                                                                       | Default Value |\n| ---------------- | ------------------------------------------------------------------------------------------------- | ------------- |\n| `ADMIN_EMAIL`    | The email address of the first user that\'s automatically created when using `directus bootstrap`. | --            |\n| `ADMIN_PASSWORD` | The password of the first user that\'s automatically created when using `directus bootstrap`.      | --            |\n\n---\n\n## Type Casting and Nesting\n\nEnvironment variables are automatically type cast based on the structure of the variable, for example:\n\n```\nPUBLIC_URL="https://example.com"\n// "https://example.com"\n\nDB_HOST="3306"\n// 3306\n\nCORS_ENABLED="false"\n// false\n\nSTORAGE_LOCATIONS="s3,local,example"\n// ["s3", "local", "example"]\n```\n\nIn cases where the environment variables are converted to a configuration object for third party library use, like in\n`DB_*` or `RATE_LIMITER_REDIS_*`, the environment variable will be converted to camelCase. You can use a double\nunderscore (`__`) for nested objects:\n\n```\nDB_CLIENT="pg"\nDB_CONNECTION_STRING="postgresql://postgres:example@127.0.0.1"\nDB_SSL__REJECT_UNAUTHORIZED="false"\n\n{\n\tclient: "pg",\n\tconnectionString: "postgresql://postgres:example@127.0.0.1",\n\tssl: {\n\t\trejectUnauthorized: false\n\t}\n}\n```\n\n## Environment Syntax Prefix\n\nDirectus will attempt to automatically type cast environment variables based on context clues\n([see above](#type-casting-and-nesting)). If you have a specific need for a given type, you can tell Directus what type\nto use for the given value by prefixing the value with `{type}:`. The following types are available:\n\n| Syntax Prefix | Example                                          | Output                                           |\n| ------------- | ------------------------------------------------ | ------------------------------------------------ |\n| `string`      | `string:value`                                   | `"value"`                                        |\n| `number`      | `number:3306`                                    | `3306`                                           |\n| `regex`       | `regex:/\\.example\\.com$/`                        | `/\\.example\\.com$/`                              |\n| `array`       | `array:https://example.com,https://example2.com` | `["https://example.com","https://example2.com"]` |\n'}}]);