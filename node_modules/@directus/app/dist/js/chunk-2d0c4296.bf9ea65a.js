(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0c4296"],{"3a3e":function(n,e,t){"use strict";t.r(e),e["default"]='# Switch\n\nRender a switch that either can model a single boolean value or model an array in combination with the `value` prop.\n\n```html\n<v-switch v-model="checked" label="Receive newsletter" />\n```\n\n## Colors\n\nColor changes are done using the css variable `--v-switch-color`.\n\n```html\n<v-switch v-model="checked" />\n<style>\n\t.v-switch {\n\t\t--v-switch-color: var(--red);\n\t}\n</style>\n```\n\n## Boolean vs arrays\n\nJust as with regular checkboxes, you can use `v-model` with both an array and a boolean:\n\n```html\n<template>\n\t<v-switch v-model="withBoolean" />\n\n\t<v-switch v-model="withArray" value="red" />\n\t<v-switch v-model="withArray" value="blue" />\n\t<v-switch v-model="withArray" value="green" />\n</template>\n\n<script>\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\twithBoolean: false,\n\t\t\t\twithArray: [\'red\', \'green\'],\n\t\t\t};\n\t\t},\n\t};\n<\/script>\n```\n\nKeep in mind to pass the `value` prop with a unique value when using arrays in `v-model`.\n\n## Reference\n\n#### Props\n\n| Prop          | Description                                            | Default | Type               |\n| ------------- | ------------------------------------------------------ | ------- | ------------------ |\n| `value`       | If modeling an array, what value the switch represents | `null`  | `String`           |\n| `input-value` | Model the selected state using `v-model`               | `false` | `[Boolean, Array]` |\n| `disabled`    | Disables the switch                                    | `false` | `Boolean`          |\n| `label`       | Displays a label next to the switch                    | `null`  | `String`           |\n\n#### CSS Variables\n\n| Variable           | Default                    |\n| ------------------ | -------------------------- |\n| `--v-switch-color` | `var(--foreground-normal)` |\n\n#### Events\n\n| Event    | Description                          | Value |\n| -------- | ------------------------------------ | ----- |\n| `change` | When the state of the switch changes |       |\n\n#### Slots\n\n| Slot    | Description                                     | Data |\n| ------- | ----------------------------------------------- | ---- |\n| `label` | Alternative way of adding a label to the switch |      |\n'}}]);