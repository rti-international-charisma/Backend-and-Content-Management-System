(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0c7344"],{"502e":function(n,t,e){"use strict";e.r(t),t["default"]='---\npageClass: page-reference\n---\n\n# Items\n\n<div class="two-up">\n<div class="left">\n\n> Items are individual pieces of data in your database. They can be anything, from articles, to IoT status checks. [Learn more about Items](/concepts/items/).\n\n</div>\n<div class="right">\n\n[[toc]]\n\n</div>\n</div>\n\n---\n\n## The Item Object\n\n<div class="two-up">\n<div class="left">\n\nItems don\'t have a pre-defined schema. The format depends completely on how you configured your collections and fields\nin Directus. For the sake of documentation, we\'ll use a fictional articles collection with the following fields: `id`,\n`status`, `title`, `body`, `featured_image`, and `author`.\n\n</div>\n<div class="right">\n\n```json\n{\n\t"id": 1,\n\t"status": "published",\n\t"title": "Hello, world!",\n\t"body": "This is my first article",\n\t"featured_image": "768eabec-3c54-4110-a6bb-64b548116661",\n\t"author": "0bc7b36a-9ba9-4ce0-83f0-0a526f354e07"\n}\n```\n\n</div>\n</div>\n\n---\n\n## List Items\n\nList all items that exist in Directus.\n\n<div class="two-up">\n<div class="left">\n\n### Query Parameters\n\nSupports all [global query parameters](/reference/api/query).\n\n::: tip Nested Data\n\nThe [Field Parameter](/reference/api/query/#fields) is required to return nested relational data!\n\n:::\n\n### Returns\n\nAn array of up to [limit](/reference/api/query/#limit) [item objects](#the-item-object). If no items are available, data\nwill be an empty array.\n\n#### Singleton\n\nIf your collection is a singleton, this endpoint will return the item.\n\n</div>\n<div class="right">\n\n```\nGET /items/:collection\n```\n\n```json\n// Response\n\n{\n\t"data": [\n\t\t{\n\t\t\t"id": 1,\n\t\t\t"status": "published",\n\t\t\t"title": "Hello, world!",\n\t\t\t"body": "This is my first article",\n\t\t\t"featured_image": "768eabec-3c54-4110-a6bb-64b548116661",\n\t\t\t"author": "0bc7b36a-9ba9-4ce0-83f0-0a526f354e07"\n\t\t},\n\t\t{...},\n\t\t{...}\n\t]\n}\n```\n\n</div>\n</div>\n\n---\n\n## Retrieve an Item\n\nGet an item that exists in Directus.\n\n<div class="two-up">\n<div class="left">\n\n### Query Parameters\n\nSupports all [global query parameters](/reference/api/query).\n\n### Returns\n\nReturns a [item object](#the-item-object) if a valid primary key was provided.\n\n</div>\n<div class="right">\n\n```\nGET /items/:collection/:id\n```\n\n```json\n// Response\n\n{\n\t"data": {\n\t\t"id": 1,\n\t\t"status": "published",\n\t\t"title": "Hello, world!",\n\t\t"body": "This is my first article",\n\t\t"featured_image": "768eabec-3c54-4110-a6bb-64b548116661",\n\t\t"author": "0bc7b36a-9ba9-4ce0-83f0-0a526f354e07"\n\t}\n}\n```\n\n</div>\n</div>\n\n---\n\n## Create an Item\n\nCreate one or more new item(s).\n\n<div class="two-up">\n<div class="left">\n\n### Query Parameters\n\nSupports all [global query parameters](/reference/api/query).\n\n### Request Body\n\nA partial [item object](#the-item-object) or an array of partial [item objects](#the-item-object).\n\n### Returns\n\nReturns the [item object](#the-item-object) of the item that was created.\n\n</div>\n<div class="right">\n\n```\nPOST /items/:collection\n```\n\n```json\n// Request\n\n{\n\t"title": "Hello again, world!",\n\t"body": "This is our second article"\n}\n```\n\n```json\n// Response\n\n{\n\t"data": {\n\t\t"id": 2,\n\t\t"status": "draft",\n\t\t"title": "Hello, world!",\n\t\t"body": "This is my first article",\n\t\t"featured_image": null,\n\t\t"author": null\n\t}\n}\n```\n\n</div>\n</div>\n\n---\n\n## Update an Item\n\nUpdate an existing item.\n\n<div class="two-up">\n<div class="left">\n\n### Query Parameters\n\nSupports all [global query parameters](/reference/api/query).\n\n### Request Body\n\nA partial [item object](#the-item-object).\n\n### Returns\n\nReturns the [item object](#the-item-object) of the item that was updated.\n\n</div>\n<div class="right">\n\n```\nPATCH /items/:collection/:id\n```\n\n```json\n// Request\n\n{\n\t"author": "d97c2e0e-293d-4eb5-9e1c-27d3460ad29d"\n}\n```\n\n```json\n// Response\n\n{\n\t"data": {\n\t\t"id": 2,\n\t\t"status": "draft",\n\t\t"title": "Hello, world!",\n\t\t"body": "This is my first article",\n\t\t"featured_image": null,\n\t\t"author": "d97c2e0e-293d-4eb5-9e1c-27d3460ad29d"\n\t}\n}\n```\n\n</div>\n</div>\n\n---\n\n## Update Multiple Items\n\nUpdate multiple items at the same time.\n\n<div class="two-up">\n<div class="left">\n\n### Query Parameters\n\nSupports all [global query parameters](/reference/api/query).\n\n### Request Body\n\nThere\'s two ways to update items: Update multiple items to _different_ values, or to update multiple items to _the same_\nvalues.\n\n#### Different Values\n\nPost an array of (partial) [item objects](#the-item-object). Make sure to include `id` for every object in the array in\norder for Directus to be able to know what the item is you\'re updating.\n\n#### Same Value\n\nAlternatively, you can send the following:\n\n<div class="definitions">\n\n`keys` **Required**\\\nArray of primary keys of the items you\'d like to update.\n\n`data` **Required**\\\nAny of [the item object](#the-item-object)\'s properties.\n\n</div>\n\n### Returns\n\nReturns the [item objects](#the-item-object) for the updated items.\n\n#### Singleton\n\nIf your collection is a singleton, this endpoint will act the same as the [Update an Item](#update-an-item) endpoint.\n\n</div>\n<div class="right">\n\n```\nPATCH /items/:collection\n```\n\n```json\n// Request\n\n// Multiple items, different values\n[\n\t{\n\t\t"id": 1,\n\t\t"featured_image": "d17c10aa-0bad-4864-9296-84f522c753e5"\n\t},\n\t{\n\t\t"id": 2,\n\t\t"featured_image": "b6123925-2fc0-4a30-9d86-863eafc0a6e7"\n\t}\n]\n\n// Multiple items, same value\n{\n\t"keys": [1, 2],\n\t"data": {\n\t\t"status": "published"\n\t}\n}\n```\n\n```json\n// Response\n\n{\n\t"data": [\n\t\t{\n\t\t\t"id": 2,\n\t\t\t"status": "draft",\n\t\t\t"title": "Hello, world!",\n\t\t\t"body": "This is my first article",\n\t\t\t"featured_image": null,\n\t\t\t"author": null\n\t\t},\n\t\t{...}\n\t]\n}\n```\n\n</div>\n</div>\n\n---\n\n## Delete an Item\n\nDelete an existing item.\n\n<div class="two-up">\n<div class="left">\n\n### Returns\n\nEmpty body.\n\n</div>\n<div class="right">\n\n```\nDELETE /items/:collection/:id\n```\n\n```json\n// Empty Response\n```\n\n</div>\n</div>\n\n---\n\n## Delete Multiple Items\n\nDelete multiple existing items.\n\n<div class="two-up">\n<div class="left">\n\n### Request Body\n\nAn array of item primary keys.\n\n### Returns\n\nEmpty body.\n\n</div>\n<div class="right">\n\n```\nDELETE /items/:collection\n```\n\n```json\n// Request\n["d97c2e0e-293d-4eb5-9e1c-27d3460ad29d", "fc02d733-95b8-4e27-bd4b-08a32cbe4e66"]\n```\n\n```json\n// Empty Response\n```\n\n</div>\n</div>\n'}}]);