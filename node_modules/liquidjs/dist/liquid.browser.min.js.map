{"version":3,"file":"liquid.browser.min.js","sources":["../src/drop/drop.ts","../src/util/underscore.ts","../src/cache/lru.ts","../src/drop/comparable.ts","../src/render/boolean.ts","../src/render/operator.ts","../src/util/operator-trie.ts","../src/liquid-options.ts","../src/fs/browser.ts","../src/util/error.ts","../src/parser/token-kind.ts","../src/context/context.ts","../src/util/type-guards.ts","../src/util/character.ts","../src/parser/whitespace-ctrl.ts","../src/tokens/token.ts","../src/tokens/number-token.ts","../src/tokens/identifier-token.ts","../src/drop/null-drop.ts","../src/drop/empty-drop.ts","../src/drop/blank-drop.ts","../src/util/literal.ts","../src/tokens/literal-token.ts","../src/tokens/operator-token.ts","../src/parser/parse-string-literal.ts","../src/tokens/property-access-token.ts","../src/util/assert.ts","../src/tokens/filter-token.ts","../src/tokens/hash-token.ts","../src/tokens/quoted-token.ts","../src/tokens/html-token.ts","../src/tokens/delimited-token.ts","../src/tokens/tag-token.ts","../src/tokens/range-token.ts","../src/tokens/output-token.ts","../src/render/expression.ts","../src/parser/tokenizer.ts","../src/parser/match-operator.ts","../src/render/emitter.ts","../src/render/render.ts","../src/parser/parse-stream.ts","../src/template/template-impl.ts","../src/template/tag/hash.ts","../src/template/filter/filter.ts","../src/parser/filter-arg.ts","../src/template/value.ts","../src/util/async.ts","../src/template/tag/tag.ts","../src/template/output.ts","../src/template/html.ts","../src/parser/parser.ts","../src/builtin/tags/assign.ts","../src/util/collection.ts","../src/drop/forloop-drop.ts","../src/builtin/tags/for.ts","../src/builtin/tags/capture.ts","../src/context/block-mode.ts","../src/builtin/tags/case.ts","../src/builtin/tags/comment.ts","../src/builtin/tags/include.ts","../src/builtin/tags/render.ts","../src/builtin/tags/decrement.ts","../src/builtin/tags/cycle.ts","../src/builtin/tags/if.ts","../src/builtin/tags/increment.ts","../src/builtin/tags/layout.ts","../src/drop/block-drop.ts","../src/builtin/tags/block.ts","../src/builtin/tags/raw.ts","../src/drop/tablerowloop-drop.ts","../src/builtin/tags/index.ts","../src/builtin/tags/tablerow.ts","../src/builtin/tags/unless.ts","../src/builtin/tags/break.ts","../src/builtin/tags/continue.ts","../src/builtin/filters/html.ts","../src/builtin/filters/math.ts","../src/util/strftime.ts","../src/builtin/filters/url.ts","../src/builtin/filters/array.ts","../src/builtin/filters/date.ts","../src/builtin/filters/object.ts","../src/builtin/filters/string.ts","../src/template/tag/tag-map.ts","../src/template/filter/filter-map.ts","../src/liquid.ts"],"sourcesContent":["export abstract class Drop {\n  public valueOf (): any {\n    return undefined\n  }\n\n  public liquidMethodMissing (key: string): Promise<string | undefined> | string | undefined {\n    return undefined\n  }\n}\n","import { Drop } from '../drop/drop'\n\nconst toStr = Object.prototype.toString\nconst toLowerCase = String.prototype.toLowerCase\n\n/*\n * Checks if value is classified as a String primitive or object.\n * @param {any} value The value to check.\n * @return {Boolean} Returns true if value is a string, else false.\n */\nexport function isString (value: any): value is string {\n  return toStr.call(value) === '[object String]'\n}\n\nexport function isFunction (value: any): value is Function {\n  return typeof value === 'function'\n}\n\nexport function promisify<T1, T2> (fn: (arg1: T1, cb: (err: Error | null, result: T2) => void) => void): (arg1: T1) => Promise<T2>;\nexport function promisify<T1, T2, T3> (fn: (arg1: T1, arg2: T2, cb: (err: Error | null, result: T3) => void) => void): (arg1: T1, arg2: T2) => Promise<T3>;\nexport function promisify (fn: any) {\n  return function (...args: any[]) {\n    return new Promise((resolve, reject) => {\n      fn(...args, (err: Error, result: any) => {\n        err ? reject(err) : resolve(result)\n      })\n    })\n  }\n}\n\nexport function stringify (value: any): string {\n  value = toValue(value)\n  return isNil(value) ? '' : String(value)\n}\n\nexport function toValue (value: any): any {\n  return value instanceof Drop ? value.valueOf() : value\n}\n\nexport function isNumber (value: any): value is number {\n  return typeof value === 'number'\n}\n\nexport function toLiquid (value: any): any {\n  if (value && isFunction(value.toLiquid)) return toLiquid(value.toLiquid())\n  return value\n}\n\nexport function isNil (value: any): boolean {\n  return value === null || value === undefined\n}\n\nexport function isArray (value: any): value is any[] {\n  // be compatible with IE 8\n  return toStr.call(value) === '[object Array]'\n}\n\n/*\n * Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property.\n * The iteratee is invoked with three arguments: (value, key, object).\n * Iteratee functions may exit iteration early by explicitly returning false.\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @return {Object} Returns object.\n */\nexport function forOwn <T> (\n  object: {[key: string]: T} | undefined,\n  iteratee: ((val: T, key: string, obj: {[key: string]: T}) => boolean | void)\n) {\n  object = object || {}\n  for (const k in object) {\n    if (object.hasOwnProperty(k)) {\n      if (iteratee(object[k], k, object) === false) break\n    }\n  }\n  return object\n}\n\nexport function last <T>(arr: T[]): T;\nexport function last (arr: string): string;\nexport function last (arr: any[] | string): any | string {\n  return arr[arr.length - 1]\n}\n\n/*\n * Checks if value is the language type of Object.\n * (e.g. arrays, functions, objects, regexes, new Number(0), and new String(''))\n * @param {any} value The value to check.\n * @return {Boolean} Returns true if value is an object, else false.\n */\nexport function isObject (value: any): value is object {\n  const type = typeof value\n  return value !== null && (type === 'object' || type === 'function')\n}\n\nexport function range (start: number, stop: number, step = 1) {\n  const arr: number[] = []\n  for (let i = start; i < stop; i += step) {\n    arr.push(i)\n  }\n  return arr\n}\n\nexport function padStart (str: any, length: number, ch = ' ') {\n  return pad(str, length, ch, (str, ch) => ch + str)\n}\n\nexport function padEnd (str: any, length: number, ch = ' ') {\n  return pad(str, length, ch, (str, ch) => str + ch)\n}\n\nexport function pad (str: any, length: number, ch: string, add: (str: string, ch: string) => string) {\n  str = String(str)\n  let n = length - str.length\n  while (n-- > 0) str = add(str, ch)\n  return str\n}\n\nexport function identify<T> (val: T): T {\n  return val\n}\n\nexport function snakeCase (str: string) {\n  return str.replace(\n    /(\\w?)([A-Z])/g,\n    (_, a, b) => (a ? a + '_' : '') + b.toLowerCase()\n  )\n}\n\nexport function changeCase (str: string): string {\n  const hasLowerCase = [...str].some(ch => ch >= 'a' && ch <= 'z')\n  return hasLowerCase ? str.toUpperCase() : str.toLowerCase()\n}\n\nexport function ellipsis (str: string, N: number): string {\n  return str.length > N ? str.substr(0, N - 3) + '...' : str\n}\n\n// compare string in case-insensitive way, undefined values to the tail\nexport function caseInsensitiveCompare (a: any, b: any) {\n  if (a == null && b == null) return 0\n  if (a == null) return 1\n  if (b == null) return -1\n  a = toLowerCase.call(a)\n  b = toLowerCase.call(b)\n  if (a < b) return -1\n  if (a > b) return 1\n  return 0\n}\n","import { Cache } from './cache'\n\nclass Node<T> {\n  constructor (\n    public key: string,\n    public value: T,\n    public next: Node<T>,\n    public prev: Node<T>\n  ) {}\n}\n\nexport class LRU<T> implements Cache<T> {\n  private cache: { [key: string]: Node<T> } = {}\n  private head: Node<T>\n  private tail: Node<T>\n\n  constructor (\n    public limit: number,\n    public size = 0\n  ) {\n    this.head = new Node<T>('HEAD', null as any, null as any, null as any)\n    this.tail = new Node<T>('TAIL', null as any, null as any, null as any)\n    this.head.next = this.tail\n    this.tail.prev = this.head\n  }\n\n  write (key: string, value: T) {\n    if (this.cache[key]) {\n      this.cache[key].value = value\n    } else {\n      const node = new Node(key, value, this.head.next, this.head)\n      this.head.next.prev = node\n      this.head.next = node\n\n      this.cache[key] = node\n      this.size++\n      this.ensureLimit()\n    }\n  }\n\n  read (key: string): T | undefined {\n    if (!this.cache[key]) return\n    const { value } = this.cache[key]\n    this.remove(key)\n    this.write(key, value)\n    return value\n  }\n\n  remove (key: string) {\n    const node = this.cache[key]\n    node.prev.next = node.next\n    node.next.prev = node.prev\n    delete this.cache[key]\n    this.size--\n  }\n\n  clear () {\n    this.head.next = this.tail\n    this.tail.prev = this.head\n    this.size = 0\n    this.cache = {}\n  }\n\n  private ensureLimit () {\n    if (this.size > this.limit) this.remove(this.tail.prev.key)\n  }\n}\n","import { isFunction } from '../util/underscore'\n\nexport interface Comparable {\n  equals: (rhs: any) => boolean;\n  gt: (rhs: any) => boolean;\n  geq: (rhs: any) => boolean;\n  lt: (rhs: any) => boolean;\n  leq: (rhs: any) => boolean;\n}\n\nexport function isComparable (arg: any): arg is Comparable {\n  return arg && isFunction(arg.equals)\n}\n","import { Context } from '../context/context'\n\nexport function isTruthy (val: any, ctx: Context): boolean {\n  return !isFalsy(val, ctx)\n}\n\nexport function isFalsy (val: any, ctx: Context): boolean {\n  if (ctx.opts.jsTruthy) {\n    return !val\n  } else {\n    return val === false || undefined === val || val === null\n  }\n}\n","import { isComparable } from '../drop/comparable'\nimport { Context } from '../context/context'\nimport { isFunction } from '../util/underscore'\nimport { isTruthy } from '../render/boolean'\n\nexport interface Operators {\n  [key: string]: (lhs: any, rhs: any, ctx: Context) => boolean;\n}\n\nexport const defaultOperators: Operators = {\n  '==': (l: any, r: any) => {\n    if (isComparable(l)) return l.equals(r)\n    if (isComparable(r)) return r.equals(l)\n    return l === r\n  },\n  '!=': (l: any, r: any) => {\n    if (isComparable(l)) return !l.equals(r)\n    if (isComparable(r)) return !r.equals(l)\n    return l !== r\n  },\n  '>': (l: any, r: any) => {\n    if (isComparable(l)) return l.gt(r)\n    if (isComparable(r)) return r.lt(l)\n    return l > r\n  },\n  '<': (l: any, r: any) => {\n    if (isComparable(l)) return l.lt(r)\n    if (isComparable(r)) return r.gt(l)\n    return l < r\n  },\n  '>=': (l: any, r: any) => {\n    if (isComparable(l)) return l.geq(r)\n    if (isComparable(r)) return r.leq(l)\n    return l >= r\n  },\n  '<=': (l: any, r: any) => {\n    if (isComparable(l)) return l.leq(r)\n    if (isComparable(r)) return r.geq(l)\n    return l <= r\n  },\n  'contains': (l: any, r: any) => {\n    return l && isFunction(l.indexOf) ? l.indexOf(r) > -1 : false\n  },\n  'and': (l: any, r: any, ctx: Context) => isTruthy(l, ctx) && isTruthy(r, ctx),\n  'or': (l: any, r: any, ctx: Context) => isTruthy(l, ctx) || isTruthy(r, ctx)\n}\n","import { Operators } from '../render/operator'\n\nexport interface Trie {\n  [key: string]: any;\n}\n\nexport function createTrie (operators: Operators): Trie {\n  const trie: Trie = {}\n  for (const [name, handler] of Object.entries(operators)) {\n    let node = trie\n\n    for (let i = 0; i < name.length; i++) {\n      const c = name[i]\n      node[c] = node[c] || {}\n\n      if (i === name.length - 1 && c !== '=') {\n        node[c].needBoundary = true\n      }\n\n      node = node[c]\n    }\n\n    node.handler = handler\n    node.end = true\n  }\n  return trie\n}\n","import * as _ from './util/underscore'\nimport { Template } from './template/template'\nimport { Cache } from './cache/cache'\nimport { LRU } from './cache/lru'\nimport { FS } from './fs/fs'\nimport * as fs from './fs/node'\nimport { defaultOperators, Operators } from './render/operator'\nimport { createTrie, Trie } from './util/operator-trie'\n\nexport interface LiquidOptions {\n  /** A directory or an array of directories from where to resolve layout and include templates, and the filename passed to `.renderFile()`. If it's an array, the files are looked up in the order they occur in the array. Defaults to `[\".\"]` */\n  root?: string | string[];\n  /** Add a extname (if filepath doesn't include one) before template file lookup. Eg: setting to `\".html\"` will allow including file by basename. Defaults to `\"\"`. */\n  extname?: string;\n  /** Whether or not to cache resolved templates. Defaults to `false`. */\n  cache?: boolean | number | Cache<Template[]>;\n  /** Use Javascript Truthiness. Defaults to `false`. */\n  jsTruthy?: boolean;\n  /** If set, treat the `filepath` parameter in `{%include filepath %}` and `{%layout filepath%}` as a variable, otherwise as a literal value. Defaults to `true`. */\n  dynamicPartials?: boolean;\n  /** Whether or not to assert filter existence. If set to `false`, undefined filters will be skipped. Otherwise, undefined filters will cause an exception. Defaults to `false`. */\n  strictFilters?: boolean;\n  /** Whether or not to assert variable existence.  If set to `false`, undefined variables will be rendered as empty string.  Otherwise, undefined variables will cause an exception. Defaults to `false`. */\n  strictVariables?: boolean;\n  /** Modifies the behavior of `strictVariables`. If set, a single undefined variable will *not* cause an exception in the context of the `if`/`elsif`/`unless` tag and the `default` filter. Instead, it will evaluate to `false` and `null`, respectively. Irrelevant if `strictVariables` is not set. Defaults to `false`. **/\n  lenientIf?: boolean;\n  /** Strip blank characters (including ` `, `\\t`, and `\\r`) from the right of tags (`{% %}`) until `\\n` (inclusive). Defaults to `false`. */\n  trimTagRight?: boolean;\n  /** Similar to `trimTagRight`, whereas the `\\n` is exclusive. Defaults to `false`. See Whitespace Control for details. */\n  trimTagLeft?: boolean;\n  /** Strip blank characters (including ` `, `\\t`, and `\\r`) from the right of values (`{{ }}`) until `\\n` (inclusive). Defaults to `false`. */\n  trimOutputRight?: boolean;\n  /** Similar to `trimOutputRight`, whereas the `\\n` is exclusive. Defaults to `false`. See Whitespace Control for details. */\n  trimOutputLeft?: boolean;\n  /** The left delimiter for liquid tags. **/\n  tagDelimiterLeft?: string;\n  /** The right delimiter for liquid tags. **/\n  tagDelimiterRight?: string;\n  /** The left delimiter for liquid outputs. **/\n  outputDelimiterLeft?: string;\n  /** The right delimiter for liquid outputs. **/\n  outputDelimiterRight?: string;\n  /** Whether input strings to date filter preserve the given timezone **/\n  preserveTimezones?: boolean;\n  /** Whether `trim*Left`/`trim*Right` is greedy. When set to `true`, all consecutive blank characters including `\\n` will be trimed regardless of line breaks. Defaults to `true`. */\n  greedy?: boolean;\n  /** `fs` is used to override the default file-system module with a custom implementation. */\n  fs?: FS;\n  /** the global environment passed down to all partial templates, i.e. templates included by `include`, `layout` and `render` tags. */\n  globals?: object;\n  /** Whether or not to keep value type when writing the Output. Defaults to `false`. */\n  keepOutputType?: boolean;\n  /** An object of operators for conditional statements. Defaults to the regular Liquid operators. */\n  operators?: Operators;\n}\n\ninterface NormalizedOptions extends LiquidOptions {\n  root?: string[];\n  cache?: Cache<Template[]>;\n  operatorsTrie?: Trie;\n}\n\nexport interface NormalizedFullOptions extends NormalizedOptions {\n  root: string[];\n  extname: string;\n  cache: undefined | Cache<Template[]>;\n  jsTruthy: boolean;\n  dynamicPartials: boolean;\n  fs: FS;\n  strictFilters: boolean;\n  strictVariables: boolean;\n  lenientIf: boolean;\n  trimTagRight: boolean;\n  trimTagLeft: boolean;\n  trimOutputRight: boolean;\n  trimOutputLeft: boolean;\n  tagDelimiterLeft: string;\n  tagDelimiterRight: string;\n  outputDelimiterLeft: string;\n  outputDelimiterRight: string;\n  preserveTimezones: boolean;\n  greedy: boolean;\n  globals: object;\n  keepOutputType: boolean;\n  operators: Operators;\n  operatorsTrie: Trie;\n}\n\nexport const defaultOptions: NormalizedFullOptions = {\n  root: ['.'],\n  cache: undefined,\n  extname: '',\n  fs: fs,\n  dynamicPartials: true,\n  jsTruthy: false,\n  trimTagRight: false,\n  trimTagLeft: false,\n  trimOutputRight: false,\n  trimOutputLeft: false,\n  greedy: true,\n  tagDelimiterLeft: '{%',\n  tagDelimiterRight: '%}',\n  outputDelimiterLeft: '{{',\n  outputDelimiterRight: '}}',\n  preserveTimezones: false,\n  strictFilters: false,\n  strictVariables: false,\n  lenientIf: false,\n  globals: {},\n  keepOutputType: false,\n  operators: defaultOperators,\n  operatorsTrie: createTrie(defaultOperators)\n}\n\nexport function normalize (options?: LiquidOptions): NormalizedOptions {\n  options = options || {}\n  if (options.hasOwnProperty('root')) {\n    options.root = normalizeStringArray(options.root)\n  }\n  if (options.hasOwnProperty('cache')) {\n    let cache: Cache<Template[]> | undefined\n    if (typeof options.cache === 'number') cache = options.cache > 0 ? new LRU(options.cache) : undefined\n    else if (typeof options.cache === 'object') cache = options.cache\n    else cache = options.cache ? new LRU<Template[]>(1024) : undefined\n    options.cache = cache\n  }\n  if (options.hasOwnProperty('operators')) {\n    (options as NormalizedOptions).operatorsTrie = createTrie(options.operators!)\n  }\n  return options as NormalizedOptions\n}\n\nexport function applyDefault (options: NormalizedOptions): NormalizedFullOptions {\n  return { ...defaultOptions, ...options }\n}\n\nexport function normalizeStringArray (value: any): string[] {\n  if (_.isArray(value)) return value as string[]\n  if (_.isString(value)) return [value as string]\n  return []\n}\n","import { last } from '../util/underscore'\n\nfunction domResolve (root: string, path: string) {\n  const base = document.createElement('base')\n  base.href = root\n\n  const head = document.getElementsByTagName('head')[0]\n  head.insertBefore(base, head.firstChild)\n\n  const a = document.createElement('a')\n  a.href = path\n  const resolved = a.href\n  head.removeChild(base)\n\n  return resolved\n}\n\nexport function resolve (root: string, filepath: string, ext: string) {\n  if (root.length && last(root) !== '/') root += '/'\n  const url = domResolve(root, filepath)\n  return url.replace(/^(\\w+:\\/\\/[^/]+)(\\/[^?]+)/, (str, origin, path) => {\n    const last = path.split('/').pop()\n    if (/\\.\\w+$/.test(last)) return str\n    return origin + path + ext\n  })\n}\n\nexport async function readFile (url: string): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest()\n    xhr.onload = () => {\n      if (xhr.status >= 200 && xhr.status < 300) {\n        resolve(xhr.responseText as string)\n      } else {\n        reject(new Error(xhr.statusText))\n      }\n    }\n    xhr.onerror = () => {\n      reject(new Error('An error occurred whilst receiving the response.'))\n    }\n    xhr.open('GET', url)\n    xhr.send()\n  })\n}\n\nexport function readFileSync (url: string): string {\n  const xhr = new XMLHttpRequest()\n  xhr.open('GET', url, false)\n  xhr.send()\n  if (xhr.status < 200 || xhr.status >= 300) {\n    throw new Error(xhr.statusText)\n  }\n  return xhr.responseText as string\n}\n\nexport async function exists (filepath: string) {\n  return true\n}\n\nexport function existsSync (filepath: string) {\n  return true\n}\n","import * as _ from './underscore'\nimport { Token } from '../tokens/token'\nimport { Template } from '../template/template'\n\nabstract class LiquidError extends Error {\n  private token: Token\n  private originalError: Error\n  public constructor (err: Error, token: Token) {\n    super(err.message)\n    this.originalError = err\n    this.token = token\n  }\n  protected update () {\n    const err = this.originalError\n    const context = mkContext(this.token)\n    this.message = mkMessage(err.message, this.token)\n    this.stack = this.message + '\\n' + context +\n      '\\n' + this.stack + '\\nFrom ' + err.stack\n  }\n}\n\nexport class TokenizationError extends LiquidError {\n  public constructor (message: string, token: Token) {\n    super(new Error(message), token)\n    this.name = 'TokenizationError'\n    super.update()\n  }\n}\n\nexport class ParseError extends LiquidError {\n  public constructor (err: Error, token: Token) {\n    super(err, token)\n    this.name = 'ParseError'\n    this.message = err.message\n    super.update()\n  }\n}\n\nexport class RenderError extends LiquidError {\n  public constructor (err: Error, tpl: Template) {\n    super(err, tpl.token)\n    this.name = 'RenderError'\n    this.message = err.message\n    super.update()\n  }\n  public static is (obj: any): obj is RenderError {\n    return obj.name === 'RenderError'\n  }\n}\n\nexport class UndefinedVariableError extends LiquidError {\n  public constructor (err: Error, token: Token) {\n    super(err, token)\n    this.name = 'UndefinedVariableError'\n    this.message = err.message\n    super.update()\n  }\n}\n\n// only used internally; raised where we don't have token information,\n// so it can't be an UndefinedVariableError.\nexport class InternalUndefinedVariableError extends Error {\n  variableName: string\n\n  public constructor (variableName: string) {\n    super(`undefined variable: ${variableName}`)\n    this.name = 'InternalUndefinedVariableError'\n    this.variableName = variableName\n  }\n}\n\nexport class AssertionError extends Error {\n  public constructor (message: string) {\n    super(message)\n    this.name = 'AssertionError'\n    this.message = message + ''\n  }\n}\n\nfunction mkContext (token: Token) {\n  const [line] = token.getPosition()\n  const lines = token.input.split('\\n')\n  const begin = Math.max(line - 2, 1)\n  const end = Math.min(line + 3, lines.length)\n\n  const context = _\n    .range(begin, end + 1)\n    .map(lineNumber => {\n      const indicator = (lineNumber === line) ? '>> ' : '   '\n      const num = _.padStart(String(lineNumber), String(end).length)\n      const text = lines[lineNumber - 1]\n      return `${indicator}${num}| ${text}`\n    })\n    .join('\\n')\n\n  return context\n}\n\nfunction mkMessage (msg: string, token: Token) {\n  if (token.file) msg += `, file:${token.file}`\n  const [line, col] = token.getPosition()\n  msg += `, line:${line}, col:${col}`\n  return msg\n}\n","export enum TokenKind {\n  Number = 1,\n  Literal = 2,\n  Tag = 4,\n  Output = 8,\n  HTML = 16,\n  Filter = 32,\n  Hash = 64,\n  PropertyAccess = 128,\n  Word = 256,\n  Range = 512,\n  Quoted = 1024,\n  Operator = 2048,\n  Delimited = Tag | Output\n}\n","import { Drop } from '../drop/drop'\nimport { __assign } from 'tslib'\nimport { NormalizedFullOptions, defaultOptions } from '../liquid-options'\nimport { Scope } from './scope'\nimport { isArray, isNil, isString, isFunction, toLiquid } from '../util/underscore'\nimport { InternalUndefinedVariableError } from '../util/error'\n\nexport class Context {\n  private scopes: Scope[] = [{}]\n  private registers = {}\n  public environments: Scope\n  public globals: Scope\n  public sync: boolean\n  public opts: NormalizedFullOptions\n  public constructor (env: object = {}, opts: NormalizedFullOptions = defaultOptions, sync = false) {\n    this.sync = sync\n    this.opts = opts\n    this.globals = opts.globals\n    this.environments = env\n  }\n  public getRegister (key: string, defaultValue = {}) {\n    return (this.registers[key] = this.registers[key] || defaultValue)\n  }\n  public setRegister (key: string, value: any) {\n    return (this.registers[key] = value)\n  }\n  public saveRegister (...keys: string[]): [string, any][] {\n    return keys.map(key => [key, this.getRegister(key)])\n  }\n  public restoreRegister (keyValues: [string, any][]) {\n    return keyValues.forEach(([key, value]) => this.setRegister(key, value))\n  }\n  public getAll () {\n    return [this.globals, this.environments, ...this.scopes]\n      .reduce((ctx, val) => __assign(ctx, val), {})\n  }\n  public get (paths: string[]) {\n    const scope = this.findScope(paths[0])\n    return this.getFromScope(scope, paths)\n  }\n  public getFromScope (scope: object, paths: string[] | string) {\n    if (typeof paths === 'string') paths = paths.split('.')\n    return paths.reduce((scope, path) => {\n      scope = readProperty(scope, path)\n      if (isNil(scope) && this.opts.strictVariables) {\n        throw new InternalUndefinedVariableError(path)\n      }\n      return scope\n    }, scope)\n  }\n  public push (ctx: object) {\n    return this.scopes.push(ctx)\n  }\n  public pop () {\n    return this.scopes.pop()\n  }\n  public bottom () {\n    return this.scopes[0]\n  }\n  private findScope (key: string) {\n    for (let i = this.scopes.length - 1; i >= 0; i--) {\n      const candidate = this.scopes[i]\n      if (key in candidate) return candidate\n    }\n    if (key in this.environments) return this.environments\n    return this.globals\n  }\n}\n\nexport function readProperty (obj: Scope, key: string) {\n  if (isNil(obj)) return obj\n  obj = toLiquid(obj)\n  if (isFunction(obj[key])) return obj[key]()\n  if (obj instanceof Drop) {\n    if (obj.hasOwnProperty(key)) return obj[key]\n    return obj.liquidMethodMissing(key)\n  }\n  if (key === 'size') return readSize(obj)\n  if (key === 'first') return readFirst(obj)\n  if (key === 'last') return readLast(obj)\n  return obj[key]\n}\n\nfunction readFirst (obj: Scope) {\n  if (isArray(obj)) return obj[0]\n  return obj['first']\n}\n\nfunction readLast (obj: Scope) {\n  if (isArray(obj)) return obj[obj.length - 1]\n  return obj['last']\n}\n\nfunction readSize (obj: Scope) {\n  if (isArray(obj) || isString(obj)) return obj.length\n  return obj['size']\n}\n","import { OperatorToken } from '../tokens/operator-token'\nimport { DelimitedToken } from '../tokens/delimited-token'\nimport { IdentifierToken } from '../tokens/identifier-token'\nimport { TagToken } from '../tokens/tag-token'\nimport { HTMLToken } from '../tokens/html-token'\nimport { OutputToken } from '../tokens/output-token'\nimport { PropertyAccessToken } from '../tokens/property-access-token'\nimport { LiteralToken } from '../tokens/literal-token'\nimport { QuotedToken } from '../tokens/quoted-token'\nimport { NumberToken } from '../tokens/number-token'\nimport { RangeToken } from '../tokens/range-token'\nimport { TokenKind } from '../parser/token-kind'\n\nexport function isDelimitedToken (val: any): val is DelimitedToken {\n  return !!(getKind(val) & TokenKind.Delimited)\n}\n\nexport function isOperatorToken (val: any): val is OperatorToken {\n  return getKind(val) === TokenKind.Operator\n}\n\nexport function isHTMLToken (val: any): val is HTMLToken {\n  return getKind(val) === TokenKind.HTML\n}\n\nexport function isOutputToken (val: any): val is OutputToken {\n  return getKind(val) === TokenKind.Output\n}\n\nexport function isTagToken (val: any): val is TagToken {\n  return getKind(val) === TokenKind.Tag\n}\n\nexport function isQuotedToken (val: any): val is QuotedToken {\n  return getKind(val) === TokenKind.Quoted\n}\n\nexport function isLiteralToken (val: any): val is LiteralToken {\n  return getKind(val) === TokenKind.Literal\n}\n\nexport function isNumberToken (val: any): val is NumberToken {\n  return getKind(val) === TokenKind.Number\n}\n\nexport function isPropertyAccessToken (val: any): val is PropertyAccessToken {\n  return getKind(val) === TokenKind.PropertyAccess\n}\n\nexport function isWordToken (val: any): val is IdentifierToken {\n  return getKind(val) === TokenKind.Word\n}\n\nexport function isRangeToken (val: any): val is RangeToken {\n  return getKind(val) === TokenKind.Range\n}\n\nfunction getKind (val: any) {\n  return val ? val.kind : -1\n}\n","// **DO NOT CHANGE THIS FILE**\n//\n// This file is generated by bin/character-gen.js\n// bitmask character types to boost performance\nexport const TYPES = [0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 4, 4, 4, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 2, 8, 0, 0, 0, 0, 8, 0, 0, 0, 64, 0, 65, 0, 0, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 0, 0, 2, 2, 2, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]\nexport const IDENTIFIER = 1\nexport const OPERATOR = 2\nexport const BLANK = 4\nexport const QUOTE = 8\nexport const INLINE_BLANK = 16\nexport const NUMBER = 32\nexport const SIGN = 64\nTYPES[160] = TYPES[5760] = TYPES[6158] = TYPES[8192] = TYPES[8193] = TYPES[8194] = TYPES[8195] = TYPES[8196] = TYPES[8197] = TYPES[8198] = TYPES[8199] = TYPES[8200] = TYPES[8201] = TYPES[8202] = TYPES[8232] = TYPES[8233] = TYPES[8239] = TYPES[8287] = TYPES[12288] = BLANK\n","import { Token } from '../tokens/token'\nimport { isTagToken, isHTMLToken, isDelimitedToken } from '../util/type-guards'\nimport { NormalizedFullOptions } from '../liquid-options'\nimport { TYPES, INLINE_BLANK, BLANK } from '../util/character'\n\nexport function whiteSpaceCtrl (tokens: Token[], options: NormalizedFullOptions) {\n  let inRaw = false\n\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i]\n    if (!isDelimitedToken(token)) continue\n    if (!inRaw && token.trimLeft) {\n      trimLeft(tokens[i - 1], options.greedy)\n    }\n\n    if (isTagToken(token)) {\n      if (token.name === 'raw') inRaw = true\n      else if (token.name === 'endraw') inRaw = false\n    }\n\n    if (!inRaw && token.trimRight) {\n      trimRight(tokens[i + 1], options.greedy)\n    }\n  }\n}\n\nfunction trimLeft (token: Token, greedy: boolean) {\n  if (!token || !isHTMLToken(token)) return\n\n  const mask = greedy ? BLANK : INLINE_BLANK\n  while (TYPES[token.input.charCodeAt(token.end - 1 - token.trimRight)] & mask) token.trimRight++\n}\n\nfunction trimRight (token: Token, greedy: boolean) {\n  if (!token || !isHTMLToken(token)) return\n\n  const mask = greedy ? BLANK : INLINE_BLANK\n  while (TYPES[token.input.charCodeAt(token.begin + token.trimLeft)] & mask) token.trimLeft++\n  if (token.input.charAt(token.begin + token.trimLeft) === '\\n') token.trimLeft++\n}\n","import { TokenKind } from '../parser/token-kind'\n\nexport abstract class Token {\n  public constructor (\n    public kind: TokenKind,\n    public input: string,\n    public begin: number,\n    public end: number,\n    public file?: string\n  ) {}\n  public getText () {\n    return this.input.slice(this.begin, this.end)\n  }\n  public getPosition () {\n    let [row, col] = [1, 1]\n    for (let i = 0; i < this.begin; i++) {\n      if (this.input[i] === '\\n') {\n        row++\n        col = 1\n      } else col++\n    }\n    return [row, col]\n  }\n  public size () {\n    return this.end - this.begin\n  }\n}\n","import { Token } from './token'\nimport { IdentifierToken } from './identifier-token'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class NumberToken extends Token {\n  constructor (\n    public whole: IdentifierToken,\n    public decimal?: IdentifierToken\n  ) {\n    super(TokenKind.Number, whole.input, whole.begin, decimal ? decimal.end : whole.end, whole.file)\n  }\n}\n","import { Token } from './token'\nimport { NUMBER, TYPES, SIGN } from '../util/character'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class IdentifierToken extends Token {\n  public content: string\n  constructor (\n    public input: string,\n    public begin: number,\n    public end: number,\n    public file?: string\n  ) {\n    super(TokenKind.Word, input, begin, end, file)\n    this.content = this.getText()\n  }\n  isNumber (allowSign = false) {\n    const begin = allowSign && TYPES[this.input.charCodeAt(this.begin)] & SIGN\n      ? this.begin + 1\n      : this.begin\n    for (let i = begin; i < this.end; i++) {\n      if (!(TYPES[this.input.charCodeAt(i)] & NUMBER)) return false\n    }\n    return true\n  }\n}\n","import { Drop } from './drop'\nimport { Comparable } from './comparable'\nimport { isNil, toValue } from '../util/underscore'\n\nexport class NullDrop extends Drop implements Comparable {\n  public equals (value: any) {\n    return isNil(toValue(value))\n  }\n  public gt () {\n    return false\n  }\n  public geq () {\n    return false\n  }\n  public lt () {\n    return false\n  }\n  public leq () {\n    return false\n  }\n  public valueOf () {\n    return null\n  }\n}\n","import { Drop } from './drop'\nimport { Comparable } from './comparable'\nimport { isObject, isString, isArray, toValue } from '../util/underscore'\n\nexport class EmptyDrop extends Drop implements Comparable {\n  public equals (value: any) {\n    if (value instanceof EmptyDrop) return false\n    value = toValue(value)\n    if (isString(value) || isArray(value)) return value.length === 0\n    if (isObject(value)) return Object.keys(value).length === 0\n    return false\n  }\n  public gt () {\n    return false\n  }\n  public geq () {\n    return false\n  }\n  public lt () {\n    return false\n  }\n  public leq () {\n    return false\n  }\n  public valueOf () {\n    return ''\n  }\n}\n","import { isNil, isString, toValue } from '../util/underscore'\nimport { EmptyDrop } from '../drop/empty-drop'\n\nexport class BlankDrop extends EmptyDrop {\n  public equals (value: any) {\n    if (value === false) return true\n    if (isNil(toValue(value))) return true\n    if (isString(value)) return /^\\s*$/.test(value)\n    return super.equals(value)\n  }\n}\n","import { NullDrop } from '../drop/null-drop'\nimport { EmptyDrop } from '../drop/empty-drop'\nimport { BlankDrop } from '../drop/blank-drop'\n\nconst nil = new NullDrop()\nexport const literalValues = {\n  'true': true,\n  'false': false,\n  'nil': nil,\n  'null': nil,\n  'empty': new EmptyDrop(),\n  'blank': new BlankDrop()\n}\n","import { Token } from './token'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class LiteralToken extends Token {\n  public literal: string\n  public constructor (\n    public input: string,\n    public begin: number,\n    public end: number,\n    public file?: string\n  ) {\n    super(TokenKind.Literal, input, begin, end, file)\n    this.literal = this.getText()\n  }\n}\n","import { Token } from './token'\nimport { TokenKind } from '../parser/token-kind'\n\nexport const precedence = {\n  '==': 1,\n  '!=': 1,\n  '>': 1,\n  '<': 1,\n  '>=': 1,\n  '<=': 1,\n  'contains': 1,\n  'and': 0,\n  'or': 0\n}\n\nexport class OperatorToken extends Token {\n  public operator: string\n  public constructor (\n    public input: string,\n    public begin: number,\n    public end: number,\n    public file?: string\n  ) {\n    super(TokenKind.Operator, input, begin, end, file)\n    this.operator = this.getText()\n  }\n  getPrecedence () {\n    const key = this.getText()\n    return key in precedence ? precedence[key] : 1\n  }\n}\n","const rHex = /[\\da-fA-F]/\nconst rOct = /[0-7]/\nconst escapeChar = {\n  b: '\\b',\n  f: '\\f',\n  n: '\\n',\n  r: '\\r',\n  t: '\\t',\n  v: '\\x0B'\n}\n\nfunction hexVal (c: string) {\n  const code = c.charCodeAt(0)\n  if (code >= 97) return code - 87\n  if (code >= 65) return code - 55\n  return code - 48\n}\n\nexport function parseStringLiteral (str: string): string {\n  let ret = ''\n  for (let i = 1; i < str.length - 1; i++) {\n    if (str[i] !== '\\\\') {\n      ret += str[i]\n      continue\n    }\n    if (escapeChar[str[i + 1]] !== undefined) {\n      ret += escapeChar[str[++i]]\n    } else if (str[i + 1] === 'u') {\n      let val = 0\n      let j = i + 2\n      while (j <= i + 5 && rHex.test(str[j])) {\n        val = val * 16 + hexVal(str[j++])\n      }\n      i = j - 1\n      ret += String.fromCharCode(val)\n    } else if (!rOct.test(str[i + 1])) {\n      ret += str[++i]\n    } else {\n      let j = i + 1\n      let val = 0\n      while (j <= i + 3 && rOct.test(str[j])) {\n        val = val * 8 + hexVal(str[j++])\n      }\n      i = j - 1\n      ret += String.fromCharCode(val)\n    }\n  }\n  return ret\n}\n","import { Token } from './token'\nimport { IdentifierToken } from './identifier-token'\nimport { QuotedToken } from './quoted-token'\nimport { TokenKind } from '../parser/token-kind'\nimport { parseStringLiteral } from '../parser/parse-string-literal'\n\nexport class PropertyAccessToken extends Token {\n  constructor (\n    public variable: IdentifierToken | QuotedToken,\n    public props: (IdentifierToken | QuotedToken | PropertyAccessToken)[],\n    end: number\n  ) {\n    super(TokenKind.PropertyAccess, variable.input, variable.begin, end, variable.file)\n  }\n\n  getVariableAsText () {\n    if (this.variable instanceof IdentifierToken) {\n      return this.variable.getText()\n    } else {\n      return parseStringLiteral(this.variable.getText())\n    }\n  }\n}\n","import { AssertionError } from './error'\n\nexport function assert <T> (predicate: T | null | undefined, message?: () => string) {\n  if (!predicate) {\n    const msg = message ? message() : `expect ${predicate} to be true`\n    throw new AssertionError(msg)\n  }\n}\n","import { Token } from './token'\nimport { FilterArg } from '../parser/filter-arg'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class FilterToken extends Token {\n  public constructor (\n    public name: string,\n    public args: FilterArg[],\n    input: string,\n    begin: number,\n    end: number,\n    file?: string\n  ) {\n    super(TokenKind.Filter, input, begin, end, file)\n  }\n}\n","import { Token } from './token'\nimport { ValueToken } from './value-token'\nimport { IdentifierToken } from './identifier-token'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class HashToken extends Token {\n  constructor (\n    public input: string,\n    public begin: number,\n    public end: number,\n    public name: IdentifierToken,\n    public value?: ValueToken,\n    public file?: string\n  ) {\n    super(TokenKind.Hash, input, begin, end, file)\n  }\n}\n","import { Token } from './token'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class QuotedToken extends Token {\n  constructor (\n    public input: string,\n    public begin: number,\n    public end: number,\n    public file?: string\n  ) {\n    super(TokenKind.Quoted, input, begin, end, file)\n  }\n}\n","import { Token } from './token'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class HTMLToken extends Token {\n  trimLeft = 0\n  trimRight = 0\n  constructor (\n    public input: string,\n    public begin: number,\n    public end: number,\n    public file?: string\n  ) {\n    super(TokenKind.HTML, input, begin, end, file)\n  }\n  public getContent () {\n    return this.input.slice(this.begin + this.trimLeft, this.end - this.trimRight)\n  }\n}\n","import { Token } from './token'\nimport { TokenKind } from '../parser/token-kind'\nimport { last } from '../util/underscore'\n\nexport abstract class DelimitedToken extends Token {\n  public trimLeft = false\n  public trimRight = false\n  public content: string\n  public constructor (\n    kind: TokenKind,\n    content: string,\n    input: string,\n    begin: number,\n    end: number,\n    trimLeft: boolean,\n    trimRight: boolean,\n    file?: string\n  ) {\n    super(kind, input, begin, end, file)\n    this.content = this.getText()\n    const tl = content[0] === '-'\n    const tr = last(content) === '-'\n    this.content = content\n      .slice(\n        tl ? 1 : 0,\n        tr ? -1 : content.length\n      )\n      .trim()\n    this.trimLeft = tl || trimLeft\n    this.trimRight = tr || trimRight\n  }\n}\n","import { DelimitedToken } from './delimited-token'\nimport { TokenizationError } from '../util/error'\nimport { NormalizedFullOptions } from '../liquid-options'\nimport { TokenKind } from '../parser/token-kind'\nimport { Tokenizer } from '../parser/tokenizer'\n\nexport class TagToken extends DelimitedToken {\n  public name: string\n  public args: string\n  public constructor (\n    input: string,\n    begin: number,\n    end: number,\n    options: NormalizedFullOptions,\n    file?: string\n  ) {\n    const { trimTagLeft, trimTagRight, tagDelimiterLeft, tagDelimiterRight } = options\n    const value = input.slice(begin + tagDelimiterLeft.length, end - tagDelimiterRight.length)\n    super(TokenKind.Tag, value, input, begin, end, trimTagLeft, trimTagRight, file)\n\n    const tokenizer = new Tokenizer(this.content, options.operatorsTrie)\n    this.name = tokenizer.readIdentifier().getText()\n    if (!this.name) throw new TokenizationError(`illegal tag syntax`, this)\n\n    tokenizer.skipBlank()\n    this.args = tokenizer.remaining()\n  }\n}\n","import { Token } from './token'\nimport { ValueToken } from './value-token'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class RangeToken extends Token {\n  constructor (\n    public input: string,\n    public begin: number,\n    public end: number,\n    public lhs: ValueToken,\n    public rhs: ValueToken,\n    public file?: string\n  ) {\n    super(TokenKind.Range, input, begin, end, file)\n  }\n}\n","import { DelimitedToken } from './delimited-token'\nimport { NormalizedFullOptions } from '../liquid-options'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class OutputToken extends DelimitedToken {\n  public constructor (\n    input: string,\n    begin: number,\n    end: number,\n    options: NormalizedFullOptions,\n    file?: string\n  ) {\n    const { trimOutputLeft, trimOutputRight, outputDelimiterLeft, outputDelimiterRight } = options\n    const value = input.slice(begin + outputDelimiterLeft.length, end - outputDelimiterRight.length)\n    super(TokenKind.Output, value, input, begin, end, trimOutputLeft, trimOutputRight, file)\n  }\n}\n","import { QuotedToken } from '../tokens/quoted-token'\nimport { PropertyAccessToken } from '../tokens/property-access-token'\nimport { NumberToken } from '../tokens/number-token'\nimport { assert } from '../util/assert'\nimport { literalValues } from '../util/literal'\nimport { LiteralToken } from '../tokens/literal-token'\nimport * as TypeGuards from '../util/type-guards'\nimport { Token } from '../tokens/token'\nimport { OperatorToken } from '../tokens/operator-token'\nimport { RangeToken } from '../tokens/range-token'\nimport { parseStringLiteral } from '../parser/parse-string-literal'\nimport { Context } from '../context/context'\nimport { range } from '../util/underscore'\nimport { Operators } from '../render/operator'\nimport { UndefinedVariableError } from '../util/error'\n\nexport class Expression {\n  private postfix: Token[]\n\n  public constructor (tokens: IterableIterator<Token>) {\n    this.postfix = [...toPostfix(tokens)]\n  }\n  public * evaluate (ctx: Context, lenient: boolean): any {\n    assert(ctx, () => 'unable to evaluate: context not defined')\n    const operands: any[] = []\n    for (const token of this.postfix) {\n      if (TypeGuards.isOperatorToken(token)) {\n        const r = yield operands.pop()\n        const l = yield operands.pop()\n        const result = evalOperatorToken(ctx.opts.operators, token, l, r, ctx)\n        operands.push(result)\n      } else {\n        operands.push(yield evalToken(token, ctx, lenient && this.postfix.length === 1))\n      }\n    }\n    return operands[0]\n  }\n}\n\nexport function evalToken (token: Token | undefined, ctx: Context, lenient = false): any {\n  if (TypeGuards.isPropertyAccessToken(token)) return evalPropertyAccessToken(token, ctx, lenient)\n  if (TypeGuards.isRangeToken(token)) return evalRangeToken(token, ctx)\n  if (TypeGuards.isLiteralToken(token)) return evalLiteralToken(token)\n  if (TypeGuards.isNumberToken(token)) return evalNumberToken(token)\n  if (TypeGuards.isWordToken(token)) return token.getText()\n  if (TypeGuards.isQuotedToken(token)) return evalQuotedToken(token)\n}\n\nfunction evalPropertyAccessToken (token: PropertyAccessToken, ctx: Context, lenient: boolean) {\n  const variable = token.getVariableAsText()\n  const props: string[] = token.props.map(prop => evalToken(prop, ctx, false))\n  try {\n    return ctx.get([variable, ...props])\n  } catch (e) {\n    if (lenient && e.name === 'InternalUndefinedVariableError') return null\n    throw (new UndefinedVariableError(e, token))\n  }\n}\n\nfunction evalNumberToken (token: NumberToken) {\n  const str = token.whole.content + '.' + (token.decimal ? token.decimal.content : '')\n  return Number(str)\n}\n\nexport function evalQuotedToken (token: QuotedToken) {\n  return parseStringLiteral(token.getText())\n}\n\nfunction evalOperatorToken (operators: Operators, token: OperatorToken, lhs: any, rhs: any, ctx: Context) {\n  const impl = operators[token.operator]\n  return impl(lhs, rhs, ctx)\n}\n\nfunction evalLiteralToken (token: LiteralToken) {\n  return literalValues[token.literal]\n}\n\nfunction evalRangeToken (token: RangeToken, ctx: Context) {\n  const low: number = evalToken(token.lhs, ctx)\n  const high: number = evalToken(token.rhs, ctx)\n  return range(+low, +high + 1)\n}\n\nfunction * toPostfix (tokens: IterableIterator<Token>): IterableIterator<Token> {\n  const ops: OperatorToken[] = []\n  for (const token of tokens) {\n    if (TypeGuards.isOperatorToken(token)) {\n      while (ops.length && ops[ops.length - 1].getPrecedence() > token.getPrecedence()) {\n        yield ops.pop()!\n      }\n      ops.push(token)\n    } else yield token\n  }\n  while (ops.length) {\n    yield ops.pop()!\n  }\n}\n","import { whiteSpaceCtrl } from './whitespace-ctrl'\nimport { NumberToken } from '../tokens/number-token'\nimport { IdentifierToken } from '../tokens/identifier-token'\nimport { literalValues } from '../util/literal'\nimport { LiteralToken } from '../tokens/literal-token'\nimport { OperatorToken } from '../tokens/operator-token'\nimport { PropertyAccessToken } from '../tokens/property-access-token'\nimport { assert } from '../util/assert'\nimport { TopLevelToken } from '../tokens/toplevel-token'\nimport { FilterArg } from './filter-arg'\nimport { FilterToken } from '../tokens/filter-token'\nimport { HashToken } from '../tokens/hash-token'\nimport { QuotedToken } from '../tokens/quoted-token'\nimport { ellipsis } from '../util/underscore'\nimport { HTMLToken } from '../tokens/html-token'\nimport { TagToken } from '../tokens/tag-token'\nimport { Token } from '../tokens/token'\nimport { RangeToken } from '../tokens/range-token'\nimport { ValueToken } from '../tokens/value-token'\nimport { OutputToken } from '../tokens/output-token'\nimport { TokenizationError } from '../util/error'\nimport { NormalizedFullOptions, defaultOptions } from '../liquid-options'\nimport { TYPES, QUOTE, BLANK, IDENTIFIER } from '../util/character'\nimport { matchOperator } from './match-operator'\nimport { Trie } from '../util/operator-trie'\nimport { Expression } from '../render/expression'\n\nexport class Tokenizer {\n  p = 0\n  N: number\n  private rawBeginAt = -1\n\n  constructor (\n    private input: string,\n    private trie: Trie,\n    private file: string = ''\n  ) {\n    this.N = input.length\n  }\n\n  readExpression () {\n    return new Expression(this.readExpressionTokens())\n  }\n\n  * readExpressionTokens (): IterableIterator<Token> {\n    const operand = this.readValue()\n    if (!operand) return\n\n    yield operand\n\n    while (this.p < this.N) {\n      const operator = this.readOperator()\n      if (!operator) return\n\n      const operand = this.readValue()\n      if (!operand) return\n\n      yield operator\n      yield operand\n    }\n  }\n  readOperator (): OperatorToken | undefined {\n    this.skipBlank()\n    const end = matchOperator(this.input, this.p, this.trie, this.p + 8)\n    if (end === -1) return\n    return new OperatorToken(this.input, this.p, (this.p = end), this.file)\n  }\n  readFilters (): FilterToken[] {\n    const filters = []\n    while (true) {\n      const filter = this.readFilter()\n      if (!filter) return filters\n      filters.push(filter)\n    }\n  }\n  readFilter (): FilterToken | null {\n    this.skipBlank()\n    if (this.end()) return null\n    assert(this.peek() === '|', () => `unexpected token at ${this.snapshot()}`)\n    this.p++\n    const begin = this.p\n    const name = this.readIdentifier()\n    if (!name.size()) return null\n    const args = []\n    this.skipBlank()\n    if (this.peek() === ':') {\n      do {\n        ++this.p\n        const arg = this.readFilterArg()\n        arg && args.push(arg)\n        while (this.p < this.N && this.peek() !== ',' && this.peek() !== '|') ++this.p\n      } while (this.peek() === ',')\n    }\n    return new FilterToken(name.getText(), args, this.input, begin, this.p, this.file)\n  }\n\n  readFilterArg (): FilterArg | undefined {\n    const key = this.readValue()\n    if (!key) return\n    this.skipBlank()\n    if (this.peek() !== ':') return key\n    ++this.p\n    const value = this.readValue()\n    return [key.getText(), value]\n  }\n\n  readTopLevelTokens (options: NormalizedFullOptions = defaultOptions): TopLevelToken[] {\n    const tokens: TopLevelToken[] = []\n    while (this.p < this.N) {\n      const token = this.readTopLevelToken(options)\n      tokens.push(token)\n    }\n    whiteSpaceCtrl(tokens, options)\n    return tokens\n  }\n\n  readTopLevelToken (options: NormalizedFullOptions): TopLevelToken {\n    const { tagDelimiterLeft, outputDelimiterLeft } = options\n    if (this.rawBeginAt > -1) return this.readEndrawOrRawContent(options)\n    if (this.match(tagDelimiterLeft)) return this.readTagToken(options)\n    if (this.match(outputDelimiterLeft)) return this.readOutputToken(options)\n    return this.readHTMLToken(options)\n  }\n\n  readHTMLToken (options: NormalizedFullOptions): HTMLToken {\n    const begin = this.p\n    while (this.p < this.N) {\n      const { tagDelimiterLeft, outputDelimiterLeft } = options\n      if (this.match(tagDelimiterLeft)) break\n      if (this.match(outputDelimiterLeft)) break\n      ++this.p\n    }\n    return new HTMLToken(this.input, begin, this.p, this.file)\n  }\n\n  readTagToken (options: NormalizedFullOptions = defaultOptions): TagToken {\n    const { file, input } = this\n    const begin = this.p\n    if (this.readToDelimiter(options.tagDelimiterRight) === -1) {\n      throw this.mkError(`tag ${this.snapshot(begin)} not closed`, begin)\n    }\n    const token = new TagToken(input, begin, this.p, options, file)\n    if (token.name === 'raw') this.rawBeginAt = begin\n    return token\n  }\n\n  readToDelimiter (delimiter: string) {\n    while (this.p < this.N) {\n      if ((this.peekType() & QUOTE)) {\n        this.readQuoted()\n        continue\n      }\n      ++this.p\n      if (this.rmatch(delimiter)) return this.p\n    }\n    return -1\n  }\n\n  readOutputToken (options: NormalizedFullOptions = defaultOptions): OutputToken {\n    const { file, input } = this\n    const { outputDelimiterRight } = options\n    const begin = this.p\n    if (this.readToDelimiter(outputDelimiterRight) === -1) {\n      throw this.mkError(`output ${this.snapshot(begin)} not closed`, begin)\n    }\n    return new OutputToken(input, begin, this.p, options, file)\n  }\n\n  readEndrawOrRawContent (options: NormalizedFullOptions): HTMLToken | TagToken {\n    const { tagDelimiterLeft, tagDelimiterRight } = options\n    const begin = this.p\n    let leftPos = this.readTo(tagDelimiterLeft) - tagDelimiterLeft.length\n    while (this.p < this.N) {\n      if (this.readIdentifier().getText() !== 'endraw') {\n        leftPos = this.readTo(tagDelimiterLeft) - tagDelimiterLeft.length\n        continue\n      }\n      while (this.p <= this.N) {\n        if (this.rmatch(tagDelimiterRight)) {\n          const end = this.p\n          if (begin === leftPos) {\n            this.rawBeginAt = -1\n            return new TagToken(this.input, begin, end, options, this.file)\n          } else {\n            this.p = leftPos\n            return new HTMLToken(this.input, begin, leftPos, this.file)\n          }\n        }\n        if (this.rmatch(tagDelimiterLeft)) break\n        this.p++\n      }\n    }\n    throw this.mkError(`raw ${this.snapshot(this.rawBeginAt)} not closed`, begin)\n  }\n\n  mkError (msg: string, begin: number) {\n    return new TokenizationError(msg, new IdentifierToken(this.input, begin, this.N, this.file))\n  }\n\n  snapshot (begin: number = this.p) {\n    return JSON.stringify(ellipsis(this.input.slice(begin), 16))\n  }\n\n  /**\n   * @deprecated\n   */\n  readWord () {\n    console.warn('Tokenizer#readWord() will be removed, use #readIdentifier instead')\n    return this.readIdentifier()\n  }\n\n  readIdentifier (): IdentifierToken {\n    this.skipBlank()\n    const begin = this.p\n    while (this.peekType() & IDENTIFIER) ++this.p\n    return new IdentifierToken(this.input, begin, this.p, this.file)\n  }\n\n  readHashes () {\n    const hashes = []\n    while (true) {\n      const hash = this.readHash()\n      if (!hash) return hashes\n      hashes.push(hash)\n    }\n  }\n\n  readHash (): HashToken | undefined {\n    this.skipBlank()\n    if (this.peek() === ',') ++this.p\n    const begin = this.p\n    const name = this.readIdentifier()\n    if (!name.size()) return\n    let value\n\n    this.skipBlank()\n    if (this.peek() === ':') {\n      ++this.p\n      value = this.readValue()\n    }\n    return new HashToken(this.input, begin, this.p, name, value, this.file)\n  }\n\n  remaining () {\n    return this.input.slice(this.p)\n  }\n\n  advance (i = 1) {\n    this.p += i\n  }\n\n  end () {\n    return this.p >= this.N\n  }\n\n  readTo (end: string): number {\n    while (this.p < this.N) {\n      ++this.p\n      if (this.rmatch(end)) return this.p\n    }\n    return -1\n  }\n\n  readValue (): ValueToken | undefined {\n    const value = this.readQuoted() || this.readRange()\n    if (value) return value\n\n    if (this.peek() === '[') {\n      this.p++\n      const prop = this.readQuoted()\n      if (!prop) return\n      if (this.peek() !== ']') return\n      this.p++\n      return new PropertyAccessToken(prop, [], this.p)\n    }\n\n    const variable = this.readIdentifier()\n    if (!variable.size()) return\n\n    let isNumber = variable.isNumber(true)\n    const props: (QuotedToken | IdentifierToken)[] = []\n    while (true) {\n      if (this.peek() === '[') {\n        isNumber = false\n        this.p++\n        const prop = this.readValue() || new IdentifierToken(this.input, this.p, this.p, this.file)\n        this.readTo(']')\n        props.push(prop)\n      } else if (this.peek() === '.' && this.peek(1) !== '.') { // skip range syntax\n        this.p++\n        const prop = this.readIdentifier()\n        if (!prop.size()) break\n        if (!prop.isNumber()) isNumber = false\n        props.push(prop)\n      } else break\n    }\n    if (!props.length && literalValues.hasOwnProperty(variable.content)) {\n      return new LiteralToken(this.input, variable.begin, variable.end, this.file)\n    }\n    if (isNumber) return new NumberToken(variable, props[0] as IdentifierToken)\n    return new PropertyAccessToken(variable, props, this.p)\n  }\n\n  readRange (): RangeToken | undefined {\n    this.skipBlank()\n    const begin = this.p\n    if (this.peek() !== '(') return\n    ++this.p\n    const lhs = this.readValueOrThrow()\n    this.p += 2\n    const rhs = this.readValueOrThrow()\n    ++this.p\n    return new RangeToken(this.input, begin, this.p, lhs, rhs, this.file)\n  }\n\n  readValueOrThrow (): ValueToken {\n    const value = this.readValue()\n    assert(value, () => `unexpected token ${this.snapshot()}, value expected`)\n    return value!\n  }\n\n  readQuoted (): QuotedToken | undefined {\n    this.skipBlank()\n    const begin = this.p\n    if (!(this.peekType() & QUOTE)) return\n    ++this.p\n    let escaped = false\n    while (this.p < this.N) {\n      ++this.p\n      if (this.input[this.p - 1] === this.input[begin] && !escaped) break\n      if (escaped) escaped = false\n      else if (this.input[this.p - 1] === '\\\\') escaped = true\n    }\n    return new QuotedToken(this.input, begin, this.p, this.file)\n  }\n\n  readFileName (): IdentifierToken {\n    const begin = this.p\n    while (!(this.peekType() & BLANK) && this.peek() !== ',' && this.p < this.N) this.p++\n    return new IdentifierToken(this.input, begin, this.p, this.file)\n  }\n\n  match (word: string) {\n    for (let i = 0; i < word.length; i++) {\n      if (word[i] !== this.input[this.p + i]) return false\n    }\n    return true\n  }\n\n  rmatch (pattern: string) {\n    for (let i = 0; i < pattern.length; i++) {\n      if (pattern[pattern.length - 1 - i] !== this.input[this.p - 1 - i]) return false\n    }\n    return true\n  }\n\n  peekType (n = 0) {\n    return TYPES[this.input.charCodeAt(this.p + n)]\n  }\n\n  peek (n = 0) {\n    return this.input[this.p + n]\n  }\n\n  skipBlank () {\n    while (this.peekType() & BLANK) ++this.p\n  }\n}\n","import { IDENTIFIER } from '../util/character'\nimport { Trie } from '../util/operator-trie'\n\nexport function matchOperator (str: string, begin: number, trie: Trie, end = str.length) {\n  let node = trie\n  let i = begin\n  let info\n  while (node[str[i]] && i < end) {\n    node = node[str[i++]]\n    if (node['end']) info = node\n  }\n  if (!info) return -1\n  if (info['needBoundary'] && str.charCodeAt(i) & IDENTIFIER) return -1\n  return i\n}\n","import { stringify, toValue } from '../util/underscore'\n\nexport class Emitter {\n  public html: any = '';\n  public break = false;\n  public continue = false;\n  private keepOutputType? = false;\n\n  constructor (keepOutputType: boolean|undefined) {\n    this.keepOutputType = keepOutputType\n  }\n\n  public write (html: any) {\n    if (this.keepOutputType === true) {\n      html = toValue(html)\n    } else {\n      html = stringify(toValue(html))\n    }\n    // This will only preserve the type if the value is isolated.\n    // I.E:\n    // {{ my-port }} -> 42\n    // {{ my-host }}:{{ my-port }} -> 'host:42'\n    if (this.keepOutputType === true && typeof html !== 'string' && this.html === '') {\n      this.html = html\n    } else {\n      this.html = stringify(this.html) + stringify(html)\n    }\n  }\n}\n","import { RenderError } from '../util/error'\nimport { Context } from '../context/context'\nimport { Template } from '../template/template'\nimport { Emitter } from './emitter'\n\nexport class Render {\n  public * renderTemplates (templates: Template[], ctx: Context, emitter?: Emitter): IterableIterator<any> {\n    if (!emitter) {\n      emitter = new Emitter(ctx.opts.keepOutputType)\n    }\n    for (const tpl of templates) {\n      try {\n        const html = yield tpl.render(ctx, emitter)\n        html && emitter.write(html)\n        if (emitter.break || emitter.continue) break\n      } catch (e) {\n        const err = RenderError.is(e) ? e : new RenderError(e, tpl)\n        throw err\n      }\n    }\n    return emitter.html\n  }\n}\n","import { Token } from '../tokens/token'\nimport { Template } from '../template/template'\nimport { isTagToken } from '../util/type-guards'\nimport { TopLevelToken } from '../tokens/toplevel-token'\n\ntype ParseToken<T extends Token> = ((token: T, remainTokens: T[]) => Template)\n\nexport class ParseStream<T extends Token = TopLevelToken> {\n  private tokens: T[]\n  private handlers: {[key: string]: (arg: any) => void} = {}\n  private stopRequested = false\n  private parseToken: ParseToken<T>\n\n  public constructor (tokens: T[], parseToken: ParseToken<T>) {\n    this.tokens = tokens\n    this.parseToken = parseToken\n  }\n  public on<T2 extends Template | T | undefined> (name: string, cb: (arg: T2) => void): ParseStream<T> {\n    this.handlers[name] = cb\n    return this\n  }\n  private trigger <T extends Token | Template> (event: string, arg?: T) {\n    const h = this.handlers[event]\n    return h ? (h(arg), true) : false\n  }\n  public start () {\n    this.trigger('start')\n    let token: T | undefined\n    while (!this.stopRequested && (token = this.tokens.shift())) {\n      if (this.trigger('token', token)) continue\n      if (isTagToken(token) && this.trigger(`tag:${token.name}`, token)) {\n        continue\n      }\n      const template = this.parseToken(token, this.tokens)\n      this.trigger('template', template)\n    }\n    if (!this.stopRequested) this.trigger('end')\n    return this\n  }\n  public stop () {\n    this.stopRequested = true\n    return this\n  }\n}\n","export abstract class TemplateImpl<T> {\n  public token: T;\n  public constructor (token: T) {\n    this.token = token\n  }\n}\n","import { evalToken } from '../../render/expression'\nimport { Context } from '../../context/context'\nimport { Tokenizer } from '../../parser/tokenizer'\n\n/**\n * Key-Value Pairs Representing Tag Arguments\n * Example:\n *    For the markup `, foo:'bar', coo:2 reversed %}`,\n *    hash['foo'] === 'bar'\n *    hash['coo'] === 2\n *    hash['reversed'] === undefined\n */\nexport class Hash {\n  hash: { [key: string]: any } = {}\n  constructor (markup: string) {\n    const tokenizer = new Tokenizer(markup, {})\n    for (const hash of tokenizer.readHashes()) {\n      this.hash[hash.name.content] = hash.value\n    }\n  }\n  * render (ctx: Context) {\n    const hash = {}\n    for (const key of Object.keys(this.hash)) {\n      hash[key] = yield evalToken(this.hash[key], ctx)\n    }\n    return hash\n  }\n}\n","import { evalToken } from '../../render/expression'\nimport { Context } from '../../context/context'\nimport { identify } from '../../util/underscore'\nimport { FilterImplOptions } from './filter-impl-options'\nimport { FilterArg, isKeyValuePair } from '../../parser/filter-arg'\nimport { Liquid } from '../../liquid'\n\nexport class Filter {\n  public name: string\n  public args: FilterArg[]\n  private impl: FilterImplOptions\n  private liquid: Liquid\n\n  public constructor (name: string, impl: FilterImplOptions, args: FilterArg[], liquid: Liquid) {\n    this.name = name\n    this.impl = impl || identify\n    this.args = args\n    this.liquid = liquid\n  }\n  public render (value: any, context: Context) {\n    const argv: any[] = []\n    for (const arg of this.args as FilterArg[]) {\n      if (isKeyValuePair(arg)) argv.push([arg[0], evalToken(arg[1], context)])\n      else argv.push(evalToken(arg, context))\n    }\n    return this.impl.apply({ context, liquid: this.liquid }, [value, ...argv])\n  }\n}\n","import { isArray } from '../util/underscore'\nimport { ValueToken } from '../tokens/value-token'\n\ntype KeyValuePair = [string?, ValueToken?]\n\nexport type FilterArg = ValueToken | KeyValuePair\n\nexport function isKeyValuePair (arr: FilterArg): arr is KeyValuePair { // TODO check\n  return isArray(arr)\n}\n","import { Expression } from '../render/expression'\nimport { Tokenizer } from '../parser/tokenizer'\nimport { Filter } from './filter/filter'\nimport { Context } from '../context/context'\nimport { Liquid } from '../liquid'\n\nexport class Value {\n  public readonly filters: Filter[] = []\n  public readonly initial: Expression\n\n  /**\n   * @param str the value to be valuated, eg.: \"foobar\" | truncate: 3\n   */\n  public constructor (str: string, liquid: Liquid) {\n    const tokenizer = new Tokenizer(str, liquid.options.operatorsTrie)\n    this.initial = tokenizer.readExpression()\n    this.filters = tokenizer.readFilters().map(({ name, args }) => new Filter(name, liquid.filters.get(name), args, liquid))\n  }\n  public * value (ctx: Context, lenient: boolean) {\n    lenient = lenient || (ctx.opts.lenientIf && this.filters.length > 0 && this.filters[0].name === 'default')\n    let val = yield this.initial.evaluate(ctx, lenient)\n\n    for (const filter of this.filters) {\n      val = yield filter.render(val, ctx)\n    }\n    return val\n  }\n}\n","import { isFunction } from './underscore'\n\ntype resolver = (x?: any) => any\n\ninterface Thenable {\n  then (resolve: resolver, reject?: resolver): Thenable;\n  catch (reject: resolver): Thenable;\n}\n\nfunction createResolvedThenable (value: any): Thenable {\n  const ret = {\n    then: (resolve: resolver) => resolve(value),\n    catch: () => ret\n  }\n  return ret\n}\n\nfunction createRejectedThenable (err: Error): Thenable {\n  const ret = {\n    then: (resolve: resolver, reject?: resolver) => {\n      if (reject) return reject(err)\n      return ret\n    },\n    catch: (reject: resolver) => reject(err)\n  }\n  return ret\n}\n\nfunction isThenable (val: any): val is Thenable {\n  return val && isFunction(val.then)\n}\n\nfunction isAsyncIterator (val: any): val is IterableIterator<any> {\n  return val && isFunction(val.next) && isFunction(val.throw) && isFunction(val.return)\n}\n\n// convert an async iterator to a thenable (Promise compatible)\nexport function toThenable (val: IterableIterator<any> | Thenable | any): Thenable {\n  if (isThenable(val)) return val\n  if (isAsyncIterator(val)) return reduce()\n  return createResolvedThenable(val)\n\n  function reduce (prev?: any): Thenable {\n    let state\n    try {\n      state = (val as IterableIterator<any>).next(prev)\n    } catch (err) {\n      return createRejectedThenable(err)\n    }\n\n    if (state.done) return createResolvedThenable(state.value)\n    return toThenable(state.value!).then(reduce, err => {\n      let state\n      try {\n        state = (val as IterableIterator<any>).throw!(err)\n      } catch (e) {\n        return createRejectedThenable(e)\n      }\n      if (state.done) return createResolvedThenable(state.value)\n      return reduce(state.value)\n    })\n  }\n}\n\nexport function toPromise (val: IterableIterator<any> | Thenable | any): Promise<any> {\n  return Promise.resolve(toThenable(val))\n}\n\n// get the value of async iterator in synchronous manner\nexport function toValue (val: IterableIterator<any> | Thenable | any) {\n  let ret: any\n  toThenable(val)\n    .then((x: any) => {\n      ret = x\n      return createResolvedThenable(ret)\n    })\n    .catch((err: Error) => {\n      throw err\n    })\n  return ret\n}\n","import { isFunction } from '../../util/underscore'\nimport { Liquid } from '../../liquid'\nimport { TemplateImpl } from '../../template/template-impl'\nimport { Emitter, Hash, Context, TagToken, Template, TopLevelToken } from '../../types'\nimport { TagImpl } from './tag-impl'\n\nexport class Tag extends TemplateImpl<TagToken> implements Template {\n  public name: string\n  private impl: TagImpl\n\n  public constructor (token: TagToken, tokens: TopLevelToken[], liquid: Liquid) {\n    super(token)\n    this.name = token.name\n\n    const impl = liquid.tags.get(token.name)\n\n    this.impl = Object.create(impl)\n    this.impl.liquid = liquid\n    if (this.impl.parse) {\n      this.impl.parse(token, tokens)\n    }\n  }\n  public * render (ctx: Context, emitter: Emitter) {\n    const hash = yield new Hash(this.token.args).render(ctx)\n    const impl = this.impl\n    if (isFunction(impl.render)) return yield impl.render(ctx, emitter, hash)\n  }\n}\n","import { Value } from './value'\nimport { TemplateImpl } from '../template/template-impl'\nimport { Template } from '../template/template'\nimport { Context } from '../context/context'\nimport { Emitter } from '../render/emitter'\nimport { OutputToken } from '../tokens/output-token'\nimport { Liquid } from '../liquid'\n\nexport class Output extends TemplateImpl<OutputToken> implements Template {\n  private value: Value\n  public constructor (token: OutputToken, liquid: Liquid) {\n    super(token)\n    this.value = new Value(token.content, liquid)\n  }\n  public * render (ctx: Context, emitter: Emitter) {\n    const val = yield this.value.value(ctx, false)\n    emitter.write(val)\n  }\n}\n","import { TemplateImpl } from '../template/template-impl'\nimport { Template } from '../template/template'\nimport { HTMLToken } from '../tokens/html-token'\nimport { Context } from '../context/context'\nimport { Emitter } from '../render/emitter'\n\nexport class HTML extends TemplateImpl<HTMLToken> implements Template {\n  private str: string\n  public constructor (token: HTMLToken) {\n    super(token)\n    this.str = token.getContent()\n  }\n  public * render (ctx: Context, emitter: Emitter): IterableIterator<void> {\n    emitter.write(this.str)\n  }\n}\n","import { ParseError } from '../util/error'\nimport { Liquid } from '../liquid'\nimport { ParseStream } from './parse-stream'\nimport { isTagToken, isOutputToken } from '../util/type-guards'\nimport { OutputToken } from '../tokens/output-token'\nimport { Tag } from '../template/tag/tag'\nimport { Output } from '../template/output'\nimport { HTML } from '../template/html'\nimport { Template } from '../template/template'\nimport { TopLevelToken } from '../tokens/toplevel-token'\n\nexport default class Parser {\n  private liquid: Liquid\n\n  public constructor (liquid: Liquid) {\n    this.liquid = liquid\n  }\n  public parse (tokens: TopLevelToken[]) {\n    let token\n    const templates: Template[] = []\n    while ((token = tokens.shift())) {\n      templates.push(this.parseToken(token, tokens))\n    }\n    return templates\n  }\n  public parseToken (token: TopLevelToken, remainTokens: TopLevelToken[]) {\n    try {\n      if (isTagToken(token)) {\n        return new Tag(token, remainTokens, this.liquid)\n      }\n      if (isOutputToken(token)) {\n        return new Output(token as OutputToken, this.liquid)\n      }\n      return new HTML(token)\n    } catch (e) {\n      throw new ParseError(e, token)\n    }\n  }\n  public parseStream (tokens: TopLevelToken[]) {\n    return new ParseStream(tokens, (token, tokens) => this.parseToken(token, tokens))\n  }\n}\n","import { Tokenizer, assert, TagImplOptions, TagToken, Context } from '../../types'\n\nexport default {\n  parse: function (token: TagToken) {\n    const tokenizer = new Tokenizer(token.args, this.liquid.options.operatorsTrie)\n    this.key = tokenizer.readIdentifier().content\n    tokenizer.skipBlank()\n    assert(tokenizer.peek() === '=', () => `illegal token ${token.getText()}`)\n    tokenizer.advance()\n    this.value = tokenizer.remaining()\n  },\n  render: function * (ctx: Context) {\n    ctx.bottom()[this.key] = yield this.liquid._evalValue(this.value, ctx)\n  }\n} as TagImplOptions\n","import { isString, isObject, isArray } from './underscore'\n\nexport function toEnumerable (val: any) {\n  if (isArray(val)) return val\n  if (isString(val) && val.length > 0) return [val]\n  if (isObject(val)) return Object.keys(val).map((key) => [key, val[key]])\n  return []\n}\n\nexport function toArray (val: any) {\n  if (isArray(val)) return val\n  return [ val ]\n}\n","import { Drop } from './drop'\n\nexport class ForloopDrop extends Drop {\n  protected i = 0\n  public length: number\n  public constructor (length: number) {\n    super()\n    this.length = length\n  }\n  public next () {\n    this.i++\n  }\n  public index0 () {\n    return this.i\n  }\n  public index () {\n    return this.i + 1\n  }\n  public first () {\n    return this.i === 0\n  }\n  public last () {\n    return this.i === this.length - 1\n  }\n  public rindex () {\n    return this.length - this.i\n  }\n  public rindex0 () {\n    return this.length - this.i - 1\n  }\n  public valueOf () {\n    return JSON.stringify(this)\n  }\n}\n","import { assert, Tokenizer, evalToken, Emitter, TagToken, TopLevelToken, Context, Template, TagImplOptions, ParseStream } from '../../types'\nimport { toEnumerable } from '../../util/collection'\nimport { ForloopDrop } from '../../drop/forloop-drop'\nimport { Hash } from '../../template/tag/hash'\n\nexport default {\n  type: 'block',\n  parse: function (token: TagToken, remainTokens: TopLevelToken[]) {\n    const toknenizer = new Tokenizer(token.args, this.liquid.options.operatorsTrie)\n\n    const variable = toknenizer.readIdentifier()\n    const inStr = toknenizer.readIdentifier()\n    const collection = toknenizer.readValue()\n    assert(\n      variable.size() && inStr.content === 'in' && collection,\n      () => `illegal tag: ${token.getText()}`\n    )\n\n    this.variable = variable.content\n    this.collection = collection\n    this.hash = new Hash(toknenizer.remaining())\n    this.templates = []\n    this.elseTemplates = []\n\n    let p\n    const stream: ParseStream = this.liquid.parser.parseStream(remainTokens)\n      .on('start', () => (p = this.templates))\n      .on('tag:else', () => (p = this.elseTemplates))\n      .on('tag:endfor', () => stream.stop())\n      .on('template', (tpl: Template) => p.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${token.getText()} not closed`)\n      })\n\n    stream.start()\n  },\n  render: function * (ctx: Context, emitter: Emitter) {\n    const r = this.liquid.renderer\n    let collection = toEnumerable(yield evalToken(this.collection, ctx))\n\n    if (!collection.length) {\n      yield r.renderTemplates(this.elseTemplates, ctx, emitter)\n      return\n    }\n\n    const hash = yield this.hash.render(ctx)\n    const offset = hash.offset || 0\n    const limit = (hash.limit === undefined) ? collection.length : hash.limit\n\n    collection = collection.slice(offset, offset + limit)\n    if ('reversed' in hash) collection.reverse()\n\n    const scope = { forloop: new ForloopDrop(collection.length) }\n    ctx.push(scope)\n    for (const item of collection) {\n      scope[this.variable] = item\n      yield r.renderTemplates(this.templates, ctx, emitter)\n      if (emitter.break) {\n        emitter.break = false\n        break\n      }\n      emitter.continue = false\n      scope.forloop.next()\n    }\n    ctx.pop()\n  }\n} as TagImplOptions\n","import { Tokenizer, assert, Template, Context, TagImplOptions, TagToken, TopLevelToken } from '../../types'\nimport { evalQuotedToken } from '../../render/expression'\n\nexport default {\n  parse: function (tagToken: TagToken, remainTokens: TopLevelToken[]) {\n    const tokenizer = new Tokenizer(tagToken.args, this.liquid.options.operatorsTrie)\n    this.variable = readVariableName(tokenizer)\n    assert(this.variable, () => `${tagToken.args} not valid identifier`)\n\n    this.templates = []\n\n    const stream = this.liquid.parser.parseStream(remainTokens)\n    stream.on('tag:endcapture', () => stream.stop())\n      .on('template', (tpl: Template) => this.templates.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.getText()} not closed`)\n      })\n    stream.start()\n  },\n  render: function * (ctx: Context) {\n    const r = this.liquid.renderer\n    const html = yield r.renderTemplates(this.templates, ctx)\n    ctx.bottom()[this.variable] = html\n  }\n} as TagImplOptions\n\nfunction readVariableName (tokenizer: Tokenizer) {\n  const word = tokenizer.readIdentifier().content\n  if (word) return word\n  const quoted = tokenizer.readQuoted()\n  if (quoted) return evalQuotedToken(quoted)\n}\n","enum BlockMode {\n  /* store rendered html into blocks */\n  OUTPUT,\n  /* output rendered html directly */\n  STORE\n}\n\nexport default BlockMode\n","import { toValue, Value, Emitter, TagToken, TopLevelToken, Context, Template, TagImplOptions, ParseStream } from '../../types'\n\nexport default {\n  parse: function (tagToken: TagToken, remainTokens: TopLevelToken[]) {\n    this.cond = new Value(tagToken.args, this.liquid)\n    this.cases = []\n    this.elseTemplates = []\n\n    let p: Template[] = []\n    const stream: ParseStream = this.liquid.parser.parseStream(remainTokens)\n      .on('tag:when', (token: TagToken) => {\n        this.cases.push({\n          val: new Value(token.args, this.liquid),\n          templates: p = []\n        })\n      })\n      .on('tag:else', () => (p = this.elseTemplates))\n      .on('tag:endcase', () => stream.stop())\n      .on('template', (tpl: Template) => p.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.getText()} not closed`)\n      })\n\n    stream.start()\n  },\n\n  render: function * (ctx: Context, emitter: Emitter) {\n    const r = this.liquid.renderer\n    const cond = toValue(yield this.cond.value(ctx, ctx.opts.lenientIf))\n    for (const branch of this.cases) {\n      const val = toValue(yield branch.val.value(ctx, ctx.opts.lenientIf))\n      if (val === cond) {\n        yield r.renderTemplates(branch.templates, ctx, emitter)\n        return\n      }\n    }\n    yield r.renderTemplates(this.elseTemplates, ctx, emitter)\n  }\n} as TagImplOptions\n","import { TagToken } from '../../tokens/tag-token'\nimport { TopLevelToken } from '../../tokens/toplevel-token'\nimport { TagImplOptions } from '../../template/tag/tag-impl-options'\n\nexport default {\n  parse: function (tagToken: TagToken, remainTokens: TopLevelToken[]) {\n    const stream = this.liquid.parser.parseStream(remainTokens)\n    stream\n      .on('token', (token: TagToken) => {\n        if (token.name === 'endcomment') stream.stop()\n      })\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.getText()} not closed`)\n      })\n    stream.start()\n  }\n} as TagImplOptions\n","import { assert, evalQuotedToken, TypeGuards, Tokenizer, evalToken, Hash, Emitter, TagToken, Context, TagImplOptions } from '../../types'\nimport BlockMode from '../../context/block-mode'\n\nexport default {\n  parse: function (token: TagToken) {\n    const args = token.args\n    const tokenizer = new Tokenizer(args, this.liquid.options.operatorsTrie)\n    this.file = this.liquid.options.dynamicPartials\n      ? tokenizer.readValue()\n      : tokenizer.readFileName()\n    assert(this.file, () => `illegal argument \"${token.args}\"`)\n\n    const begin = tokenizer.p\n    const withStr = tokenizer.readIdentifier()\n    if (withStr.content === 'with') {\n      tokenizer.skipBlank()\n      if (tokenizer.peek() !== ':') {\n        this.withVar = tokenizer.readValue()\n      } else tokenizer.p = begin\n    } else tokenizer.p = begin\n\n    this.hash = new Hash(tokenizer.remaining())\n  },\n  render: function * (ctx: Context, emitter: Emitter) {\n    const { liquid, hash, withVar, file } = this\n    const { renderer } = liquid\n    const filepath = ctx.opts.dynamicPartials\n      ? (TypeGuards.isQuotedToken(file)\n        ? yield renderer.renderTemplates(liquid.parse(evalQuotedToken(file)), ctx)\n        : yield evalToken(file, ctx))\n      : file.getText()\n    assert(filepath, () => `illegal filename \"${file.getText()}\":\"${filepath}\"`)\n\n    const saved = ctx.saveRegister('blocks', 'blockMode')\n    ctx.setRegister('blocks', {})\n    ctx.setRegister('blockMode', BlockMode.OUTPUT)\n    const scope = yield hash.render(ctx)\n    if (withVar) scope[filepath] = evalToken(withVar, ctx)\n    const templates = yield liquid._parseFile(filepath, ctx.opts, ctx.sync)\n    ctx.push(scope)\n    yield renderer.renderTemplates(templates, ctx, emitter)\n    ctx.pop()\n    ctx.restoreRegister(saved)\n  }\n} as TagImplOptions\n","import { assert } from '../../util/assert'\nimport { ForloopDrop } from '../../drop/forloop-drop'\nimport { toEnumerable } from '../../util/collection'\nimport { evalQuotedToken, TypeGuards, Tokenizer, evalToken, Hash, Emitter, TagToken, Context, TagImplOptions } from '../../types'\n\nexport default {\n  parse: function (token: TagToken) {\n    const args = token.args\n    const tokenizer = new Tokenizer(args, this.liquid.options.operatorsTrie)\n    this.file = this.liquid.options.dynamicPartials\n      ? tokenizer.readValue()\n      : tokenizer.readFileName()\n    assert(this.file, () => `illegal argument \"${token.args}\"`)\n\n    while (!tokenizer.end()) {\n      tokenizer.skipBlank()\n      const begin = tokenizer.p\n      const keyword = tokenizer.readIdentifier()\n      if (keyword.content === 'with' || keyword.content === 'for') {\n        tokenizer.skipBlank()\n        if (tokenizer.peek() !== ':') {\n          const value = tokenizer.readValue()\n          if (value) {\n            const beforeAs = tokenizer.p\n            const asStr = tokenizer.readIdentifier()\n            let alias\n            if (asStr.content === 'as') alias = tokenizer.readIdentifier()\n            else tokenizer.p = beforeAs\n\n            this[keyword.content] = { value, alias: alias && alias.content }\n            tokenizer.skipBlank()\n            if (tokenizer.peek() === ',') tokenizer.advance()\n            continue\n          }\n        }\n      }\n      tokenizer.p = begin\n      break\n    }\n    this.hash = new Hash(tokenizer.remaining())\n  },\n  render: function * (ctx: Context, emitter: Emitter) {\n    const { liquid, file, hash } = this\n    const { renderer } = liquid\n    const filepath = ctx.opts.dynamicPartials\n      ? (TypeGuards.isQuotedToken(file)\n        ? yield renderer.renderTemplates(liquid.parse(evalQuotedToken(file)), ctx)\n        : evalToken(file, ctx))\n      : file.getText()\n    assert(filepath, () => `illegal filename \"${file.getText()}\":\"${filepath}\"`)\n\n    const childCtx = new Context({}, ctx.opts, ctx.sync)\n    const scope = yield hash.render(ctx)\n    if (this['with']) {\n      const { value, alias } = this['with']\n      scope[alias || filepath] = evalToken(value, ctx)\n    }\n    childCtx.push(scope)\n\n    if (this['for']) {\n      const { value, alias } = this['for']\n      let collection = evalToken(value, ctx)\n      collection = toEnumerable(collection)\n      scope['forloop'] = new ForloopDrop(collection.length)\n      for (const item of collection) {\n        scope[alias] = item\n        const templates = yield liquid._parseFile(filepath, childCtx.opts, childCtx.sync)\n        yield renderer.renderTemplates(templates, childCtx, emitter)\n        scope.forloop.next()\n      }\n    } else {\n      const templates = yield liquid._parseFile(filepath, childCtx.opts, childCtx.sync)\n      yield renderer.renderTemplates(templates, childCtx, emitter)\n    }\n  }\n} as TagImplOptions\n","import { Tokenizer, Emitter, TagToken, Context, TagImplOptions } from '../../types'\nimport { isNumber, stringify } from '../../util/underscore'\n\nexport default {\n  parse: function (token: TagToken) {\n    const tokenizer = new Tokenizer(token.args, this.liquid.options.operatorsTrie)\n    this.variable = tokenizer.readIdentifier().content\n  },\n  render: function (context: Context, emitter: Emitter) {\n    const scope = context.environments\n    if (!isNumber(scope[this.variable])) {\n      scope[this.variable] = 0\n    }\n    emitter.write(stringify(--scope[this.variable]))\n  }\n} as TagImplOptions\n","import { assert } from '../../util/assert'\nimport { evalToken, Emitter, TagToken, Context, TagImplOptions } from '../../types'\nimport { Tokenizer } from '../../parser/tokenizer'\n\nexport default {\n  parse: function (tagToken: TagToken) {\n    const tokenizer = new Tokenizer(tagToken.args, this.liquid.options.operatorsTrie)\n    const group = tokenizer.readValue()\n    tokenizer.skipBlank()\n\n    this.candidates = []\n\n    if (group) {\n      if (tokenizer.peek() === ':') {\n        this.group = group\n        tokenizer.advance()\n      } else this.candidates.push(group)\n    }\n\n    while (!tokenizer.end()) {\n      const value = tokenizer.readValue()\n      if (value) this.candidates.push(value)\n      tokenizer.readTo(',')\n    }\n    assert(this.candidates.length, () => `empty candidates: ${tagToken.getText()}`)\n  },\n\n  render: function (ctx: Context, emitter: Emitter) {\n    const group = evalToken(this.group, ctx)\n    const fingerprint = `cycle:${group}:` + this.candidates.join(',')\n    const groups = ctx.getRegister('cycle')\n    let idx = groups[fingerprint]\n\n    if (idx === undefined) {\n      idx = groups[fingerprint] = 0\n    }\n\n    const candidate = this.candidates[idx]\n    idx = (idx + 1) % this.candidates.length\n    groups[fingerprint] = idx\n    const html = evalToken(candidate, ctx)\n    emitter.write(html)\n  }\n} as TagImplOptions\n","import { Value, Emitter, isTruthy, TagToken, TopLevelToken, Context, Template, TagImplOptions, ParseStream } from '../../types'\n\nexport default {\n  parse: function (tagToken: TagToken, remainTokens: TopLevelToken[]) {\n    this.branches = []\n    this.elseTemplates = []\n\n    let p\n    const stream: ParseStream = this.liquid.parser.parseStream(remainTokens)\n      .on('start', () => this.branches.push({\n        cond: new Value(tagToken.args, this.liquid),\n        templates: (p = [])\n      }))\n      .on('tag:elsif', (token: TagToken) => {\n        this.branches.push({\n          cond: new Value(token.args, this.liquid),\n          templates: p = []\n        })\n      })\n      .on('tag:else', () => (p = this.elseTemplates))\n      .on('tag:endif', () => stream.stop())\n      .on('template', (tpl: Template) => p.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.getText()} not closed`)\n      })\n\n    stream.start()\n  },\n\n  render: function * (ctx: Context, emitter: Emitter) {\n    const r = this.liquid.renderer\n\n    for (const branch of this.branches) {\n      const cond = yield branch.cond.value(ctx, ctx.opts.lenientIf)\n      if (isTruthy(cond, ctx)) {\n        yield r.renderTemplates(branch.templates, ctx, emitter)\n        return\n      }\n    }\n    yield r.renderTemplates(this.elseTemplates, ctx, emitter)\n  }\n} as TagImplOptions\n","import { isNumber, stringify } from '../../util/underscore'\nimport { Tokenizer, Emitter, TagToken, Context, TagImplOptions } from '../../types'\n\nexport default {\n  parse: function (token: TagToken) {\n    const tokenizer = new Tokenizer(token.args, this.liquid.options.operatorsTrie)\n    this.variable = tokenizer.readIdentifier().content\n  },\n  render: function (context: Context, emitter: Emitter) {\n    const scope = context.environments\n    if (!isNumber(scope[this.variable])) {\n      scope[this.variable] = 0\n    }\n    const val = scope[this.variable]\n    scope[this.variable]++\n    emitter.write(stringify(val))\n  }\n} as TagImplOptions\n","import { assert, evalQuotedToken, TypeGuards, evalToken, Tokenizer, Emitter, Hash, TagToken, TopLevelToken, Context, TagImplOptions } from '../../types'\nimport BlockMode from '../../context/block-mode'\n\nexport default {\n  parse: function (token: TagToken, remainTokens: TopLevelToken[]) {\n    const tokenizer = new Tokenizer(token.args, this.liquid.options.operatorsTrie)\n    const file = this.liquid.options.dynamicPartials ? tokenizer.readValue() : tokenizer.readFileName()\n    assert(file, () => `illegal argument \"${token.args}\"`)\n\n    this.file = file\n    this.hash = new Hash(tokenizer.remaining())\n    this.tpls = this.liquid.parser.parse(remainTokens)\n  },\n  render: function * (ctx: Context, emitter: Emitter) {\n    const { liquid, hash, file } = this\n    const { renderer } = liquid\n    if (file.getText() === 'none') {\n      ctx.setRegister('blockMode', BlockMode.OUTPUT)\n      const html = yield renderer.renderTemplates(this.tpls, ctx)\n      emitter.write(html)\n      return\n    }\n    const filepath = ctx.opts.dynamicPartials\n      ? (TypeGuards.isQuotedToken(file)\n        ? yield renderer.renderTemplates(liquid.parse(evalQuotedToken(file)), ctx)\n        : evalToken(this.file, ctx))\n      : file.getText()\n    assert(filepath, () => `file \"${file.getText()}\"(\"${filepath}\") not available`)\n    const templates = yield liquid._parseFile(filepath, ctx.opts, ctx.sync)\n\n    // render remaining contents and store rendered results\n    ctx.setRegister('blockMode', BlockMode.STORE)\n    const html = yield renderer.renderTemplates(this.tpls, ctx)\n    const blocks = ctx.getRegister('blocks')\n    if (blocks[''] === undefined) blocks[''] = () => html\n    ctx.setRegister('blockMode', BlockMode.OUTPUT)\n\n    // render the layout file use stored blocks\n    ctx.push(yield hash.render(ctx))\n    const partial = yield renderer.renderTemplates(templates, ctx)\n    ctx.pop()\n    emitter.write(partial)\n  }\n} as TagImplOptions\n","import { Drop } from './drop'\n\nexport class BlockDrop extends Drop {\n  constructor (\n    // the block render from layout template\n    private superBlockRender: () => Iterable<string> = () => ''\n  ) {\n    super()\n  }\n  public super () {\n    return this.superBlockRender()\n  }\n}\n","import BlockMode from '../../context/block-mode'\nimport { BlockDrop } from '../../drop/block-drop'\nimport { ParseStream, TagToken, TopLevelToken, Template, Context, TagImpl, Emitter } from '../../types'\n\nexport default {\n  parse (this: TagImpl, token: TagToken, remainTokens: TopLevelToken[]) {\n    const match = /\\w+/.exec(token.args)\n    this.block = match ? match[0] : ''\n    this.tpls = [] as Template[]\n    const stream: ParseStream = this.liquid.parser.parseStream(remainTokens)\n      .on('tag:endblock', () => stream.stop())\n      .on('template', (tpl: Template) => this.tpls.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${token.getText()} not closed`)\n      })\n    stream.start()\n  },\n\n  * render (this: TagImpl, ctx: Context, emitter: Emitter) {\n    const blockRender = this.getBlockRender(ctx)\n    yield this.emitHTML(ctx, emitter, blockRender)\n  },\n\n  getBlockRender (this: TagImpl, ctx: Context) {\n    const { liquid, tpls } = this\n    const extendedBlockRender = ctx.getRegister('blocks')[this.block]\n    const defaultBlockRender = function * (superBlock: BlockDrop) {\n      ctx.push({ block: superBlock })\n      const result = yield liquid.renderer.renderTemplates(tpls, ctx)\n      ctx.pop()\n      return result\n    }\n    return extendedBlockRender\n      ? (superBlock: BlockDrop) => extendedBlockRender(new BlockDrop(() => defaultBlockRender(superBlock)))\n      : defaultBlockRender\n  },\n\n  * emitHTML (this: TagImpl, ctx: Context, emitter: Emitter, blockRender: (block: BlockDrop) => string) {\n    if (ctx.getRegister('blockMode', BlockMode.OUTPUT) === BlockMode.STORE) {\n      ctx.getRegister('blocks')[this.block] = blockRender\n    } else {\n      emitter.write(yield blockRender(new BlockDrop()))\n    }\n  }\n}\n","import { TagToken, TopLevelToken, TagImplOptions } from '../../types'\n\nexport default {\n  parse: function (tagToken: TagToken, remainTokens: TopLevelToken[]) {\n    this.tokens = []\n\n    const stream = this.liquid.parser.parseStream(remainTokens)\n    stream\n      .on('token', (token: TagToken) => {\n        if (token.name === 'endraw') stream.stop()\n        else this.tokens.push(token)\n      })\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.getText()} not closed`)\n      })\n    stream.start()\n  },\n  render: function () {\n    return this.tokens.map((token: TopLevelToken) => token.getText()).join('')\n  }\n} as TagImplOptions\n","import { ForloopDrop } from './forloop-drop'\n\nexport class TablerowloopDrop extends ForloopDrop {\n  private cols: number\n  public constructor (length: number, cols: number) {\n    super(length)\n    this.length = length\n    this.cols = cols\n  }\n  public row () {\n    return Math.floor(this.i / this.cols) + 1\n  }\n  public col0 () {\n    return (this.i % this.cols)\n  }\n  public col () {\n    return this.col0() + 1\n  }\n  public col_first () {  // eslint-disable-line\n    return this.col0() === 0\n  }\n  public col_last () { // eslint-disable-line\n    return this.col() === this.cols\n  }\n}\n","import assign from './assign'\nimport For from './for'\nimport capture from './capture'\nimport Case from './case'\nimport comment from './comment'\nimport include from './include'\nimport render from './render'\nimport decrement from './decrement'\nimport cycle from './cycle'\nimport If from './if'\nimport increment from './increment'\nimport layout from './layout'\nimport block from './block'\nimport raw from './raw'\nimport tablerow from './tablerow'\nimport unless from './unless'\nimport Break from './break'\nimport Continue from './continue'\nimport { TagImplOptions } from '../../template/tag/tag-impl-options'\n\nconst tags: { [key: string]: TagImplOptions } = {\n  assign, 'for': For, capture, 'case': Case, comment, include, render, decrement, increment, cycle, 'if': If, layout, block, raw, tablerow, unless, 'break': Break, 'continue': Continue\n}\n\nexport default tags\n","import { toEnumerable } from '../../util/collection'\nimport { assert, evalToken, Emitter, Hash, TagToken, TopLevelToken, Context, Template, TagImplOptions, ParseStream } from '../../types'\nimport { TablerowloopDrop } from '../../drop/tablerowloop-drop'\nimport { Tokenizer } from '../../parser/tokenizer'\n\nexport default {\n  parse: function (tagToken: TagToken, remainTokens: TopLevelToken[]) {\n    const tokenizer = new Tokenizer(tagToken.args, this.liquid.options.operatorsTrie)\n\n    this.variable = tokenizer.readIdentifier()\n    tokenizer.skipBlank()\n\n    const tmp = tokenizer.readIdentifier()\n    assert(tmp && tmp.content === 'in', () => `illegal tag: ${tagToken.getText()}`)\n\n    this.collection = tokenizer.readValue()\n    this.hash = new Hash(tokenizer.remaining())\n    this.templates = []\n\n    let p\n    const stream: ParseStream = this.liquid.parser.parseStream(remainTokens)\n      .on('start', () => (p = this.templates))\n      .on('tag:endtablerow', () => stream.stop())\n      .on('template', (tpl: Template) => p.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.getText()} not closed`)\n      })\n\n    stream.start()\n  },\n\n  render: function * (ctx: Context, emitter: Emitter) {\n    let collection = toEnumerable(yield evalToken(this.collection, ctx))\n    const hash = yield this.hash.render(ctx)\n    const offset = hash.offset || 0\n    const limit = (hash.limit === undefined) ? collection.length : hash.limit\n\n    collection = collection.slice(offset, offset + limit)\n    const cols = hash.cols || collection.length\n\n    const r = this.liquid.renderer\n    const tablerowloop = new TablerowloopDrop(collection.length, cols)\n    const scope = { tablerowloop }\n    ctx.push(scope)\n\n    for (let idx = 0; idx < collection.length; idx++, tablerowloop.next()) {\n      scope[this.variable.content] = collection[idx]\n      if (tablerowloop.col0() === 0) {\n        if (tablerowloop.row() !== 1) emitter.write('</tr>')\n        emitter.write(`<tr class=\"row${tablerowloop.row()}\">`)\n      }\n      emitter.write(`<td class=\"col${tablerowloop.col()}\">`)\n      yield r.renderTemplates(this.templates, ctx, emitter)\n      emitter.write('</td>')\n    }\n    if (collection.length) emitter.write('</tr>')\n    ctx.pop()\n  }\n} as TagImplOptions\n","import { Value, TopLevelToken, Template, Emitter, isTruthy, isFalsy, ParseStream, Context, TagImplOptions, TagToken } from '../../types'\n\nexport default {\n  parse: function (tagToken: TagToken, remainTokens: TopLevelToken[]) {\n    this.templates = []\n    this.branches = []\n    this.elseTemplates = []\n    let p\n    const stream: ParseStream = this.liquid.parser.parseStream(remainTokens)\n      .on('start', () => {\n        p = this.templates\n        this.cond = new Value(tagToken.args, this.liquid)\n      })\n      .on('tag:elsif', (token: TagToken) => {\n        this.branches.push({\n          cond: new Value(token.args, this.liquid),\n          templates: p = []\n        })\n      })\n      .on('tag:else', () => (p = this.elseTemplates))\n      .on('tag:endunless', () => stream.stop())\n      .on('template', (tpl: Template) => p.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.getText()} not closed`)\n      })\n\n    stream.start()\n  },\n\n  render: function * (ctx: Context, emitter: Emitter) {\n    const r = this.liquid.renderer\n    const cond = yield this.cond.value(ctx, ctx.opts.lenientIf)\n\n    if (isFalsy(cond, ctx)) {\n      yield r.renderTemplates(this.templates, ctx, emitter)\n      return\n    }\n\n    for (const branch of this.branches) {\n      const cond = yield branch.cond.value(ctx, ctx.opts.lenientIf)\n      if (isTruthy(cond, ctx)) {\n        yield r.renderTemplates(branch.templates, ctx, emitter)\n        return\n      }\n    }\n\n    yield r.renderTemplates(this.elseTemplates, ctx, emitter)\n  }\n} as TagImplOptions\n","import { Emitter, Context } from '../../types'\n\nexport default {\n  render: function (ctx: Context, emitter: Emitter) {\n    emitter.break = true\n  }\n}\n","import { Emitter, Context } from '../../types'\n\nexport default {\n  render: function (ctx: Context, emitter: Emitter) {\n    emitter.continue = true\n  }\n}\n","import { stringify } from '../../util/underscore'\n\nconst escapeMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&#34;',\n  \"'\": '&#39;'\n}\nconst unescapeMap = {\n  '&amp;': '&',\n  '&lt;': '<',\n  '&gt;': '>',\n  '&#34;': '\"',\n  '&#39;': \"'\"\n}\n\nexport function escape (str: string) {\n  return stringify(str).replace(/&|<|>|\"|'/g, m => escapeMap[m])\n}\n\nfunction unescape (str: string) {\n  return String(str).replace(/&(amp|lt|gt|#34|#39);/g, m => unescapeMap[m])\n}\n\nexport function escapeOnce (str: string) {\n  return escape(unescape(str))\n}\n\nexport function newlineToBr (v: string) {\n  return v.replace(/\\n/g, '<br />\\n')\n}\n\nexport function stripHtml (v: string) {\n  return v.replace(/<script.*?<\\/script>|<!--.*?-->|<style.*?<\\/style>|<.*?>/g, '')\n}\n","import { caseInsensitiveCompare } from '../../util/underscore'\n\nexport const abs = Math.abs\nexport const atLeast = Math.max\nexport const atMost = Math.min\nexport const ceil = Math.ceil\nexport const dividedBy = (v: number, arg: number) => v / arg\nexport const floor = Math.floor\nexport const minus = (v: number, arg: number) => v - arg\nexport const modulo = (v: number, arg: number) => v % arg\nexport const times = (v: number, arg: number) => v * arg\n\nexport function round (v: number, arg = 0) {\n  const amp = Math.pow(10, arg)\n  return Math.round(v * amp) / amp\n}\n\nexport function plus (v: number, arg: number) {\n  return Number(v) + Number(arg)\n}\n\nexport function sortNatural (input: any[], property?: string) {\n  if (!input || !input.sort) return []\n  if (property !== undefined) {\n    return [...input].sort(\n      (lhs, rhs) => caseInsensitiveCompare(lhs[property], rhs[property])\n    )\n  }\n  return [...input].sort(caseInsensitiveCompare)\n}\n","import { changeCase, padStart, padEnd } from './underscore'\n\nconst rFormat = /%([-_0^#:]+)?(\\d+)?([EO])?(.)/\nconst monthNames = [\n  'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August',\n  'September', 'October', 'November', 'December'\n]\nconst dayNames = [\n  'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'\n]\nconst monthNamesShort = monthNames.map(abbr)\nconst dayNamesShort = dayNames.map(abbr)\nconst suffixes = {\n  1: 'st',\n  2: 'nd',\n  3: 'rd',\n  'default': 'th'\n}\ninterface FormatOptions {\n  flags: object;\n  width?: string;\n  modifier?: string;\n}\n\nfunction abbr (str: string) {\n  return str.slice(0, 3)\n}\n\n// prototype extensions\nfunction daysInMonth (d: Date) {\n  const feb = isLeapYear(d) ? 29 : 28\n  return [31, feb, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n}\nfunction getDayOfYear (d: Date) {\n  let num = 0\n  for (let i = 0; i < d.getMonth(); ++i) {\n    num += daysInMonth(d)[i]\n  }\n  return num + d.getDate()\n}\nfunction getWeekOfYear (d: Date, startDay: number) {\n  // Skip to startDay of this week\n  const now = getDayOfYear(d) + (startDay - d.getDay())\n  // Find the first startDay of the year\n  const jan1 = new Date(d.getFullYear(), 0, 1)\n  const then = (7 - jan1.getDay() + startDay)\n  return String(Math.floor((now - then) / 7) + 1)\n}\nfunction isLeapYear (d: Date) {\n  const year = d.getFullYear()\n  return !!((year & 3) === 0 && (year % 100 || (year % 400 === 0 && year)))\n}\nfunction getSuffix (d: Date) {\n  const str = d.getDate().toString()\n  const index = parseInt(str.slice(-1))\n  return suffixes[index] || suffixes['default']\n}\nfunction century (d: Date) {\n  return parseInt(d.getFullYear().toString().substring(0, 2), 10)\n}\n\n// default to 0\nconst padWidths = {\n  d: 2,\n  e: 2,\n  H: 2,\n  I: 2,\n  j: 3,\n  k: 2,\n  l: 2,\n  L: 3,\n  m: 2,\n  M: 2,\n  S: 2,\n  U: 2,\n  W: 2\n}\n\n// default to '0'\nconst padChars = {\n  a: ' ',\n  A: ' ',\n  b: ' ',\n  B: ' ',\n  c: ' ',\n  e: ' ',\n  k: ' ',\n  l: ' ',\n  p: ' ',\n  P: ' '\n}\nconst formatCodes = {\n  a: (d: Date) => dayNamesShort[d.getDay()],\n  A: (d: Date) => dayNames[d.getDay()],\n  b: (d: Date) => monthNamesShort[d.getMonth()],\n  B: (d: Date) => monthNames[d.getMonth()],\n  c: (d: Date) => d.toLocaleString(),\n  C: (d: Date) => century(d),\n  d: (d: Date) => d.getDate(),\n  e: (d: Date) => d.getDate(),\n  H: (d: Date) => d.getHours(),\n  I: (d: Date) => String(d.getHours() % 12 || 12),\n  j: (d: Date) => getDayOfYear(d),\n  k: (d: Date) => d.getHours(),\n  l: (d: Date) => String(d.getHours() % 12 || 12),\n  L: (d: Date) => d.getMilliseconds(),\n  m: (d: Date) => d.getMonth() + 1,\n  M: (d: Date) => d.getMinutes(),\n  N: (d: Date, opts: FormatOptions) => {\n    const width = Number(opts.width) || 9\n    const str = String(d.getMilliseconds()).substr(0, width)\n    return padEnd(str, width, '0')\n  },\n  p: (d: Date) => (d.getHours() < 12 ? 'AM' : 'PM'),\n  P: (d: Date) => (d.getHours() < 12 ? 'am' : 'pm'),\n  q: (d: Date) => getSuffix(d),\n  s: (d: Date) => Math.round(d.valueOf() / 1000),\n  S: (d: Date) => d.getSeconds(),\n  u: (d: Date) => d.getDay() || 7,\n  U: (d: Date) => getWeekOfYear(d, 0),\n  w: (d: Date) => d.getDay(),\n  W: (d: Date) => getWeekOfYear(d, 1),\n  x: (d: Date) => d.toLocaleDateString(),\n  X: (d: Date) => d.toLocaleTimeString(),\n  y: (d: Date) => d.getFullYear().toString().substring(2, 4),\n  Y: (d: Date) => d.getFullYear(),\n  z: (d: Date, opts: FormatOptions) => {\n    const offset = d.getTimezoneOffset()\n    const nOffset = Math.abs(offset)\n    const h = Math.floor(nOffset / 60)\n    const m = nOffset % 60\n    return (offset > 0 ? '-' : '+') +\n      padStart(h, 2, '0') +\n      (opts.flags[':'] ? ':' : '') +\n      padStart(m, 2, '0')\n  },\n  't': () => '\\t',\n  'n': () => '\\n',\n  '%': () => '%'\n};\n(formatCodes as any).h = formatCodes.b\n\nexport default function (inputDate: Date, formatStr: string) {\n  let d = inputDate\n  if (d instanceof TimezoneDate) {\n    d = d.getDisplayDate()\n  }\n\n  let output = ''\n  let remaining = formatStr\n  let match\n  while ((match = rFormat.exec(remaining))) {\n    output += remaining.slice(0, match.index)\n    remaining = remaining.slice(match.index + match[0].length)\n    output += format(d, match)\n  }\n  return output + remaining\n}\n\nfunction format (d: Date, match: RegExpExecArray) {\n  const [input, flagStr = '', width, modifier, conversion] = match\n  const convert = formatCodes[conversion]\n  if (!convert) return input\n  const flags = {}\n  for (const flag of flagStr) flags[flag] = true\n  let ret = String(convert(d, { flags, width, modifier }))\n  let padChar = padChars[conversion] || '0'\n  let padWidth = width || padWidths[conversion] || 0\n  if (flags['^']) ret = ret.toUpperCase()\n  else if (flags['#']) ret = changeCase(ret)\n  if (flags['_']) padChar = ' '\n  else if (flags['0']) padChar = '0'\n  if (flags['-']) padWidth = 0\n  return padStart(ret, padWidth, padChar)\n}\n\nexport class TimezoneDate extends Date {\n  ISO8601_TIMEZONE_PATTERN = /([zZ]|([+-])(\\d{2}):(\\d{2}))$/;\n\n  inputTimezoneOffset = 0;\n\n  constructor (public dateString: string) {\n    super(dateString)\n    const m = dateString.match(this.ISO8601_TIMEZONE_PATTERN)\n    if (m && m[1] === 'Z') {\n      this.inputTimezoneOffset = this.getTimezoneOffset()\n    } else if (m && m[2] && m[3] && m[4]) {\n      const [, , sign, hours, minutes] = m\n      const delta = (sign === '+' ? 1 : -1) * (parseInt(hours, 10) * 60 + parseInt(minutes, 10))\n      this.inputTimezoneOffset = this.getTimezoneOffset() + delta\n    }\n  }\n\n  getDisplayDate (): Date {\n    return new Date((+this) + this.inputTimezoneOffset * 60 * 1000)\n  }\n}\n","export const urlDecode = (x: string) => x.split('+').map(decodeURIComponent).join(' ')\nexport const urlEncode = (x: string) => x.split(' ').map(encodeURIComponent).join('+')\n","import { isArray, isNil, last as arrayLast } from '../../util/underscore'\nimport { toArray } from '../../util/collection'\nimport { isTruthy } from '../../render/boolean'\nimport { FilterImpl } from '../../template/filter/filter-impl'\nimport { Scope } from '../../context/scope'\n\nexport const join = (v: any[], arg: string) => v.join(arg === undefined ? ' ' : arg)\nexport const last = (v: any) => isArray(v) ? arrayLast(v) : ''\nexport const first = (v: any) => isArray(v) ? v[0] : ''\nexport const reverse = (v: any[]) => [...v].reverse()\n\nexport function sort<T> (this: FilterImpl, arr: T[], property?: string) {\n  const getValue = (obj: Scope) => property ? this.context.getFromScope(obj, property.split('.')) : obj\n  return toArray(arr).sort((lhs, rhs) => {\n    lhs = getValue(lhs)\n    rhs = getValue(rhs)\n    return lhs < rhs ? -1 : (lhs > rhs ? 1 : 0)\n  })\n}\n\nexport const size = (v: string | any[]) => (v && v.length) || 0\n\nexport function map<T1, T2> (this: FilterImpl, arr: Scope[], property: string) {\n  return toArray(arr).map(obj => this.context.getFromScope(obj, property.split('.')))\n}\n\nexport function compact<T> (this: FilterImpl, arr: T[]) {\n  return toArray(arr).filter(x => !isNil(x))\n}\n\nexport function concat<T1, T2> (v: T1[], arg: T2[] | T2): (T1 | T2)[] {\n  return toArray(v).concat(arg)\n}\n\nexport function slice<T> (v: T[], begin: number, length = 1): T[] {\n  begin = begin < 0 ? v.length + begin : begin\n  return v.slice(begin, begin + length)\n}\n\nexport function where<T extends object> (this: FilterImpl, arr: T[], property: string, expected?: any): T[] {\n  return toArray(arr).filter(obj => {\n    const value = this.context.getFromScope(obj, String(property).split('.'))\n    return expected === undefined ? isTruthy(value, this.context) : value === expected\n  })\n}\n\nexport function uniq<T> (arr: T[]): T[] {\n  const u = {}\n  return (arr || []).filter(val => {\n    if (u.hasOwnProperty(String(val))) return false\n    u[String(val)] = true\n    return true\n  })\n}\n","import strftime, { TimezoneDate } from '../../util/strftime'\nimport { isString, isNumber } from '../../util/underscore'\nimport { FilterImpl } from '../../template/filter/filter-impl'\n\nexport function date (this: FilterImpl, v: string | Date, arg: string) {\n  let date = v\n  if (v === 'now' || v === 'today') {\n    date = new Date()\n  } else if (isNumber(v)) {\n    date = new Date(v * 1000)\n  } else if (isString(v)) {\n    if (/^\\d+$/.test(v)) {\n      date = new Date(+v * 1000)\n    } else if (this.context.opts.preserveTimezones) {\n      date = new TimezoneDate(v)\n    } else {\n      date = new Date(v)\n    }\n  }\n  return isValidDate(date) ? strftime(date, arg) : v\n}\n\nfunction isValidDate (date: any): date is Date {\n  return date instanceof Date && !isNaN(date.getTime())\n}\n","import { isFalsy } from '../../render/boolean'\nimport { isArray, isString, toValue } from '../../util/underscore'\nimport { FilterImpl } from '../../template/filter/filter-impl'\n\nexport function Default<T1, T2> (this: FilterImpl, v: string | T1, arg: T2): string | T1 | T2 {\n  if (isArray(v) || isString(v)) return v.length ? v : arg\n  return isFalsy(toValue(v), this.context) ? arg : v\n}\nexport function json (v: any) {\n  return JSON.stringify(v)\n}\n","/**\n * String related filters\n *\n * * prefer stringify() to String() since `undefined`, `null` should eval ''\n */\nimport { stringify } from '../../util/underscore'\nimport { assert } from '../../util/assert'\n\nexport function append (v: string, arg: string) {\n  assert(arg !== undefined, () => 'append expect 2 arguments')\n  return stringify(v) + stringify(arg)\n}\n\nexport function prepend (v: string, arg: string) {\n  assert(arg !== undefined, () => 'prepend expect 2 arguments')\n  return stringify(arg) + stringify(v)\n}\n\nexport function lstrip (v: string) {\n  return stringify(v).replace(/^\\s+/, '')\n}\n\nexport function downcase (v: string) {\n  return stringify(v).toLowerCase()\n}\n\nexport function upcase (str: string) {\n  return stringify(str).toUpperCase()\n}\n\nexport function remove (v: string, arg: string) {\n  return stringify(v).split(String(arg)).join('')\n}\n\nexport function removeFirst (v: string, l: string) {\n  return stringify(v).replace(String(l), '')\n}\n\nexport function rstrip (str: string) {\n  return stringify(str).replace(/\\s+$/, '')\n}\n\nexport function split (v: string, arg: string) {\n  return stringify(v).split(String(arg))\n}\n\nexport function strip (v: string) {\n  return stringify(v).trim()\n}\n\nexport function stripNewlines (v: string) {\n  return stringify(v).replace(/\\n/g, '')\n}\n\nexport function capitalize (str: string) {\n  str = stringify(str)\n  return str.charAt(0).toUpperCase() + str.slice(1)\n}\n\nexport function replace (v: string, pattern: string, replacement: string) {\n  return stringify(v).split(String(pattern)).join(replacement)\n}\n\nexport function replaceFirst (v: string, arg1: string, arg2: string) {\n  return stringify(v).replace(String(arg1), arg2)\n}\n\nexport function truncate (v: string, l = 50, o = '...') {\n  v = stringify(v)\n  if (v.length <= l) return v\n  return v.substr(0, l - o.length) + o\n}\n\nexport function truncatewords (v: string, l = 15, o = '...') {\n  const arr = v.split(/\\s+/)\n  let ret = arr.slice(0, l).join(' ')\n  if (arr.length >= l) ret += o\n  return ret\n}\n","import { TagImplOptions } from './tag-impl-options'\nimport { assert } from '../../util/assert'\n\nexport class TagMap {\n  private impls: {[key: string]: TagImplOptions} = {}\n\n  get (name: string) {\n    const impl = this.impls[name]\n    assert(impl, () => `tag \"${name}\" not found`)\n    return impl\n  }\n\n  set (name: string, impl: TagImplOptions) {\n    this.impls[name] = impl\n  }\n}\n","import { FilterImplOptions } from './filter-impl-options'\nimport { Filter } from './filter'\nimport { FilterArg } from '../../parser/filter-arg'\nimport { assert } from '../../util/assert'\nimport { Liquid } from '../../liquid'\n\nexport class FilterMap {\n  private impls: {[key: string]: FilterImplOptions} = {}\n\n  constructor (\n    private readonly strictFilters: boolean,\n    private readonly liquid: Liquid\n  ) {}\n\n  get (name: string) {\n    const impl = this.impls[name]\n    assert(impl || !this.strictFilters, () => `undefined filter: ${name}`)\n    return impl\n  }\n\n  set (name: string, impl: FilterImplOptions) {\n    this.impls[name] = impl\n  }\n\n  create (name: string, args: FilterArg[]) {\n    return new Filter(name, this.get(name), args, this.liquid)\n  }\n}\n","import { Context } from './context/context'\nimport { forOwn, snakeCase } from './util/underscore'\nimport { Template } from './template/template'\nimport { Tokenizer } from './parser/tokenizer'\nimport { Render } from './render/render'\nimport Parser from './parser/parser'\nimport { TagImplOptions } from './template/tag/tag-impl-options'\nimport { Value } from './template/value'\nimport builtinTags from './builtin/tags'\nimport * as builtinFilters from './builtin/filters'\nimport { TagMap } from './template/tag/tag-map'\nimport { FilterMap } from './template/filter/filter-map'\nimport { LiquidOptions, normalizeStringArray, NormalizedFullOptions, applyDefault, normalize } from './liquid-options'\nimport { FilterImplOptions } from './template/filter/filter-impl-options'\nimport { toPromise, toValue } from './util/async'\nimport { Emitter } from './render/emitter'\n\nexport * from './types'\n\nexport class Liquid {\n  public options: NormalizedFullOptions\n  public renderer: Render\n  public parser: Parser\n  public filters: FilterMap\n  public tags: TagMap\n\n  public constructor (opts: LiquidOptions = {}) {\n    this.options = applyDefault(normalize(opts))\n    this.parser = new Parser(this)\n    this.renderer = new Render()\n    this.filters = new FilterMap(this.options.strictFilters, this)\n    this.tags = new TagMap()\n\n    forOwn(builtinTags, (conf: TagImplOptions, name: string) => this.registerTag(snakeCase(name), conf))\n    forOwn(builtinFilters, (handler: FilterImplOptions, name: string) => this.registerFilter(snakeCase(name), handler))\n  }\n  public parse (html: string, filepath?: string): Template[] {\n    const tokenizer = new Tokenizer(html, this.options.operatorsTrie, filepath)\n    const tokens = tokenizer.readTopLevelTokens(this.options)\n    return this.parser.parse(tokens)\n  }\n\n  public _render (tpl: Template[], scope?: object, opts?: LiquidOptions, sync?: boolean): IterableIterator<any> {\n    const options = { ...this.options, ...normalize(opts) }\n    const ctx = new Context(scope, options, sync)\n    const emitter = new Emitter(options.keepOutputType)\n    return this.renderer.renderTemplates(tpl, ctx, emitter)\n  }\n  public async render (tpl: Template[], scope?: object, opts?: LiquidOptions): Promise<any> {\n    return toPromise(this._render(tpl, scope, opts, false))\n  }\n  public renderSync (tpl: Template[], scope?: object, opts?: LiquidOptions): any {\n    return toValue(this._render(tpl, scope, opts, true))\n  }\n\n  public _parseAndRender (html: string, scope?: object, opts?: LiquidOptions, sync?: boolean): IterableIterator<any> {\n    const tpl = this.parse(html)\n    return this._render(tpl, scope, opts, sync)\n  }\n  public async parseAndRender (html: string, scope?: object, opts?: LiquidOptions): Promise<any> {\n    return toPromise(this._parseAndRender(html, scope, opts, false))\n  }\n  public parseAndRenderSync (html: string, scope?: object, opts?: LiquidOptions): any {\n    return toValue(this._parseAndRender(html, scope, opts, true))\n  }\n\n  public * _parseFile (file: string, opts?: LiquidOptions, sync?: boolean) {\n    const options = { ...this.options, ...normalize(opts) }\n    const paths = options.root.map(root => options.fs.resolve(root, file, options.extname))\n    if (options.fs.fallback !== undefined) {\n      const filepath = options.fs.fallback(file)\n      if (filepath !== undefined) paths.push(filepath)\n    }\n\n    for (const filepath of paths) {\n      const { cache } = options\n      if (cache) {\n        const tpls = yield cache.read(filepath)\n        if (tpls) return tpls\n      }\n      if (!(sync ? options.fs.existsSync(filepath) : yield options.fs.exists(filepath))) continue\n      const tpl = this.parse(sync ? options.fs.readFileSync(filepath) : yield options.fs.readFile(filepath), filepath)\n      if (cache) cache.write(filepath, tpl)\n      return tpl\n    }\n    throw this.lookupError(file, options.root)\n  }\n  public async parseFile (file: string, opts?: LiquidOptions): Promise<Template[]> {\n    return toPromise(this._parseFile(file, opts, false))\n  }\n  public parseFileSync (file: string, opts?: LiquidOptions): Template[] {\n    return toValue(this._parseFile(file, opts, true))\n  }\n  public async renderFile (file: string, ctx?: object, opts?: LiquidOptions) {\n    const templates = await this.parseFile(file, opts)\n    return this.render(templates, ctx, opts)\n  }\n  public renderFileSync (file: string, ctx?: object, opts?: LiquidOptions) {\n    const templates = this.parseFileSync(file, opts)\n    return this.renderSync(templates, ctx, opts)\n  }\n\n  public _evalValue (str: string, ctx: Context): IterableIterator<any> {\n    const value = new Value(str, this)\n    return value.value(ctx, false)\n  }\n  public async evalValue (str: string, ctx: Context): Promise<any> {\n    return toPromise(this._evalValue(str, ctx))\n  }\n  public evalValueSync (str: string, ctx: Context): any {\n    return toValue(this._evalValue(str, ctx))\n  }\n\n  public registerFilter (name: string, filter: FilterImplOptions) {\n    this.filters.set(name, filter)\n  }\n  public registerTag (name: string, tag: TagImplOptions) {\n    this.tags.set(name, tag)\n  }\n  public plugin (plugin: (this: Liquid, L: typeof Liquid) => void) {\n    return plugin.call(this, Liquid)\n  }\n  public express () {\n    const self = this // eslint-disable-line\n    return function (this: any, filePath: string, ctx: object, callback: (err: Error | null, rendered: string) => void) {\n      const opts = { root: [...normalizeStringArray(this.root), ...self.options.root] }\n      self.renderFile(filePath, ctx, opts).then(html => callback(null, html) as any, callback as any)\n    }\n  }\n\n  private lookupError (file: string, roots: string[]) {\n    const err = new Error('ENOENT') as any\n    err.message = `ENOENT: Failed to lookup \"${file}\" in \"${roots}\"`\n    err.code = 'ENOENT'\n    return err\n  }\n\n  /**\n   * @deprecated use parseFile instead\n   */\n  public async getTemplate (file: string, opts?: LiquidOptions): Promise<Template[]> {\n    return this.parseFile(file, opts)\n  }\n  /**\n   * @deprecated use parseFileSync instead\n   */\n  public getTemplateSync (file: string, opts?: LiquidOptions): Template[] {\n    return this.parseFileSync(file, opts)\n  }\n}\n"],"names":["Drop","key","toStr","Object","prototype","toString","toLowerCase","String","isString","value","call","isFunction","stringify","isNil","toValue","valueOf","isNumber","isArray","forOwn","object","iteratee","k","hasOwnProperty","last","arr","length","isObject","type","range","start","stop","step","i","push","padStart","str","ch","pad","add","n","identify","val","snakeCase","replace","_","a","b","caseInsensitiveCompare","next","prev","this","LRU","cache","node","Node","head","size","ensureLimit","remove","write","tail","limit","isComparable","arg","equals","isTruthy","ctx","isFalsy","opts","jsTruthy","defaultOperators","==","l","r","!=",">","gt","lt","<",">=","geq","leq","<=","contains","indexOf","and","or","createTrie","operators","trie","_b","tslib_1.__values","entries","_d","name_1","handler","c","needBoundary","end","defaultOptions","root","undefined","extname","fs","filepath","ext","path","base","document","createElement","href","getElementsByTagName","insertBefore","firstChild","resolved","removeChild","domResolve","origin","split","pop","test","url","Promise","resolve","reject","xhr","XMLHttpRequest","onload","status","responseText","Error","statusText","onerror","open","send","dynamicPartials","trimTagRight","trimTagLeft","trimOutputRight","trimOutputLeft","greedy","tagDelimiterLeft","tagDelimiterRight","outputDelimiterLeft","outputDelimiterRight","preserveTimezones","strictFilters","strictVariables","lenientIf","globals","keepOutputType","operatorsTrie","normalize","options","normalizeStringArray","_.isArray","_.isString","tslib_1.__extends","LiquidError","err","originalError","context","token","line","lines","input","begin","Math","max","min","_\r\n        .range","map","lineNumber","_.padStart","join","mkContext","message","msg","file","_a","col","mkMessage","stack","_super","_this","name","update","RenderError","obj","tpl","variableName","TokenKind","Context","defaultValue","registers","_i","keys","getRegister","keyValues","forEach","setRegister","tslib_1.__spread","environments","scopes","reduce","__assign","paths","scope","findScope","getFromScope","toLiquid","liquidMethodMissing","readSize","readFirst","readLast","readProperty","InternalUndefinedVariableError","candidate","env","sync","isDelimitedToken","getKind","Delimited","isOperatorToken","Operator","isHTMLToken","HTML","isOutputToken","Output","isTagToken","Tag","isQuotedToken","Quoted","isLiteralToken","Literal","isNumberToken","Number","isPropertyAccessToken","PropertyAccess","isWordToken","Word","isRangeToken","Range","kind","TYPES","BLANK","INLINE_BLANK","trimLeft","mask","charCodeAt","trimRight","charAt","Token","slice","row","whole","decimal","IdentifierToken","allowSign","content","getText","NullDrop","EmptyDrop","BlankDrop","nil","literalValues","true","false","null","empty","blank","literal","precedence","OperatorToken","operator","rHex","rOct","escapeChar","f","t","v","hexVal","code","parseStringLiteral","ret","j","fromCharCode","PropertyAccessToken","variable","props","assert","predicate","AssertionError","args","Filter","Hash","HTMLToken","tl","tr","trim","DelimitedToken","tokenizer","Tokenizer","readIdentifier","TokenizationError","skipBlank","remaining","lhs","rhs","Expression","lenient","operands","postfix","TypeGuards.isOperatorToken","_f","result","impl","evalOperatorToken","_c","evalToken","tokens","ops","tokens_1","getPrecedence","toPostfix","TypeGuards.isPropertyAccessToken","getVariableAsText","prop","get","e","UndefinedVariableError","evalPropertyAccessToken","TypeGuards.isRangeToken","low","high","evalRangeToken","TypeGuards.isLiteralToken","evalLiteralToken","TypeGuards.isNumberToken","evalNumberToken","TypeGuards.isWordToken","TypeGuards.isQuotedToken","evalQuotedToken","readExpressionTokens","operand","readValue","p","N","readOperator","operand_1","info","matchOperator","filters","filter","readFilter","peek","snapshot","readFilterArg","FilterToken","readTopLevelToken","inRaw","whiteSpaceCtrl","rawBeginAt","readEndrawOrRawContent","match","readTagToken","readOutputToken","readHTMLToken","readToDelimiter","mkError","TagToken","delimiter","peekType","readQuoted","rmatch","OutputToken","leftPos","readTo","JSON","substr","ellipsis","console","warn","hashes","hash","readHash","HashToken","readRange","LiteralToken","NumberToken","readValueOrThrow","RangeToken","escaped","QuotedToken","word","pattern","Emitter","html","Render","templates","emitter","templates_1","render","break","continue","is","e_1","ParseStream","cb","handlers","event","h","trigger","stopRequested","shift","template","parseToken","markup","readHashes","argv","apply","liquid","Value","initial","evaluate","readExpression","readFilters","createResolvedThenable","then","catch","createRejectedThenable","toThenable","isThenable","throw","return","isAsyncIterator","state","done","toPromise","x","TemplateImpl","tags","create","parse","getContent","Parser","remainTokens","ParseError","advance","bottom","_evalValue","toEnumerable","toArray","ForloopDrop","toknenizer","inStr","collection","elseTemplates","stream","parser","parseStream","on","renderer","renderTemplates","offset","reverse","forloop","collection_1","item","tagToken","quoted","readVariableName","BlockMode","cond","cases","branch","readFileName","withVar","saved","saveRegister","OUTPUT","_parseFile","restoreRegister","keyword","beforeAs","alias","_g","childCtx","_e","group","candidates","fingerprint","groups","idx","branches","tpls","html_1","STORE","blocks","partial","BlockDrop","superBlockRender","exec","block","blockRender","getBlockRender","emitHTML","defaultBlockRender","superBlock","extendedBlockRender","TablerowloopDrop","floor","cols","col0","assign","for","For","capture","case","Case","comment","include","decrement","increment","cycle","if","If","layout","raw","tablerow","tmp","tablerowloop","unless","escapeMap","&","\"","'","unescapeMap","&amp;","&lt;","&gt;","&#34;","&#39;","escape","m","abs","atLeast","atMost","ceil","rFormat","monthNames","dayNames","monthNamesShort","abbr","dayNamesShort","suffixes","1","2","3","default","getDayOfYear","d","num","getMonth","year","getFullYear","isLeapYear","getDate","getWeekOfYear","startDay","now","getDay","Date","padWidths","H","I","L","M","S","U","W","padChars","A","B","P","formatCodes","toLocaleString","C","parseInt","substring","century","getHours","getMilliseconds","getMinutes","width","padEnd","q","index","getSuffix","s","round","getSeconds","u","w","toLocaleDateString","X","toLocaleTimeString","y","Y","z","getTimezoneOffset","nOffset","flags","%","format","flagStr","modifier","conversion","convert","flagStr_1","padChar","padWidth","toUpperCase","some","changeCase","TimezoneDate","inputTimezoneOffset","dateString","ISO8601_TIMEZONE_PATTERN","sign","hours","minutes","delta","unescape","amp","pow","property","sort","decodeURIComponent","encodeURIComponent","arrayLast","getValue","concat","expected","date","isNaN","getTime","isValidDate","inputDate","formatStr","getDisplayDate","output","strftime","replacement","arg1","arg2","o","TagMap","impls","FilterMap","Liquid","readTopLevelTokens","_render","_parseAndRender","fallback","paths_1","read","existsSync","exists","readFileSync","readFile","lookupError","parseFile","parseFileSync","renderSync","set","tag","plugin","self","filePath","callback","renderFile","roots","applyDefault","builtinTags","conf","registerTag","builtinFilters","registerFilter"],"mappings":"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"}